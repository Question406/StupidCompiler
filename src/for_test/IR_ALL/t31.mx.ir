 @constStr_0 = "Total: "
 @constStr_1 = " "
 @constStr_2 = "\n"
 @prime 
 @result 
 @resultCount 
 @b 
 @tmp 
 @i 
 @j 
 @primeCount 
 @gps 
 @M 
 @N 
 define void @origin  %N1  {
 %origin.entryBB1:
 preds:  
 doms:  %origin.entryBB1  
 		 %t1  =   mul  %N1   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   %N1 
 		 @result  = move  %t2 
 		 @i  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %origin.entryBB1  
 doms:  %forcondBB1  %origin.entryBB1  
 		 %t3  = slt  @i   %N1 
 		 br  %t3  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %forbodyBB1  %origin.entryBB1  
 		 %t4  =   mul  @i   4 
 		 %t5  =   add  %t4   4 
 		 %t6  =   add  @result   %t5 
 		 %t7  =   mul  %N1   4 
 		 %t7  =   add  %t7   4 
 		 %t8  = alloc  %t7 
 		 store  %t8   %N1 
 		 store  %t6   %t8 
 		 @j  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %forbodyBB1  
 doms:  %forcondBB1  %forbodyBB1  %origin.entryBB1  %forcondBB2  
 		 %t9  = slt  @j   %N1 
 		 br  %t9  %forbodyBB2 %afterForBB2 
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB1  %forbodyBB1  %afterForBB2  %origin.entryBB1  %forcondBB2  
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %afterForBB2  
 doms:  %forcondBB1  %forbodyBB1  %afterForBB2  %forupdateBB1  %origin.entryBB1  %forcondBB2  
 		 @i  =   add  @i   1 
 		 jump %forcondBB1
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB1  %forbodyBB2  %forbodyBB1  %origin.entryBB1  %forcondBB2  
 		 %t10  =   mul  @i   4 
 		 %t11  =   add  %t10   4 
 		 %t12  =   add  @result   %t11 
 		 %t13  = load  %t12 
 		 %t14  =   mul  @j   4 
 		 %t15  =   add  %t14   4 
 		 %t16  =   add  %t13   %t15 
 		 store  %t16   0 
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %forcondBB1  %forbodyBB2  %forupdateBB2  %forbodyBB1  %origin.entryBB1  %forcondBB2  
 		 @j  =   add  @j   1 
 		 jump %forcondBB2
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %forcondBB1  %origin.entryBB1  
 		 ret  
 
 }
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 call origin  170   
 		 @N  = move  1000 
 		 %t1  =  call getInt  
 		 @M  = move  %t1 
 		 @primeCount  = move  0 
 		 @resultCount  = move  0 
 		 %t2  =   mul  0   4 
 		 %t3  =   add  %t2   4 
 		 %t4  =   add  @tmp   %t3 
 		 store  %t4   0 
 		 @i  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %main.entryBB1  
 doms:  %forcondBB1  %main.entryBB1  
 		 %t5  =   add  @N   1 
 		 %t6  = slt  @i   %t5 
 		 br  %t6  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %main.entryBB1  %afterForBB1  
 		 @i  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %afterForBB1  
 doms:  %forcondBB1  %forcondBB2  %afterForBB1  %main.entryBB1  
 		 %t7  =   add  @M   1 
 		 %t8  = slt  @i   %t7 
 		 br  %t8  %forbodyBB2 %afterForBB2 
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  
 		 @i  = move  0 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %forupdateBB3  %afterForBB2  
 doms:  %forcondBB1  %forcondBB2  %afterForBB1  %afterForBB2  %main.entryBB1  %forcondBB3  
 		 %t9  = sle  @i   @M 
 		 br  %t9  %forbodyBB3 %afterForBB3 
 
 %forbodyBB3:
 preds:  %forcondBB3  
 doms:  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forcondBB3  %forbodyBB3  
 		 @j  = move  0 
 		 jump %forcondBB4
 
 %forcondBB4:
 preds:  %forupdateBB4  %forbodyBB3  
 doms:  %forcondBB1  %forcondBB2  %afterForBB1  %afterForBB2  %forcondBB4  %main.entryBB1  %forcondBB3  %forbodyBB3  
 		 %t10  = sle  @j   @M 
 		 br  %t10  %forbodyBB4 %afterForBB4 
 
 %afterForBB4:
 preds:  %forcondBB4  
 doms:  %forcondBB1  %forcondBB2  %afterForBB2  %forcondBB4  %main.entryBB1  %afterForBB1  %afterForBB4  %forcondBB3  %forbodyBB3  
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %afterForBB4  
 doms:  %forupdateBB3  %forcondBB1  %forcondBB2  %afterForBB2  %forcondBB4  %main.entryBB1  %afterForBB1  %afterForBB4  %forcondBB3  %forbodyBB3  
 		 %t11  =   add  @i   1 
 		 @i  = move  %t11 
 		 jump %forcondBB3
 
 %forbodyBB4:
 preds:  %forcondBB4  
 doms:  %forbodyBB4  %forcondBB1  %forcondBB2  %afterForBB2  %forcondBB4  %main.entryBB1  %afterForBB1  %forcondBB3  %forbodyBB3  
 		 %t12  =   mul  @i   4 
 		 %t13  =   add  %t12   4 
 		 %t14  =   add  @result   %t13 
 		 %t15  = load  %t14 
 		 %t16  =   mul  @j   4 
 		 %t17  =   add  %t16   4 
 		 %t18  =   add  %t15   %t17 
 		 %t19  =   sub  0   1 
 		 store  %t18   %t19 
 		 jump %forupdateBB4
 
 %forupdateBB4:
 preds:  %forbodyBB4  
 doms:  %forbodyBB4  %forcondBB1  %forcondBB2  %afterForBB2  %forcondBB4  %main.entryBB1  %forupdateBB4  %afterForBB1  %forcondBB3  %forbodyBB3  
 		 %t20  =   add  @j   1 
 		 @j  = move  %t20 
 		 jump %forcondBB4
 
 %afterForBB3:
 preds:  %forcondBB3  
 doms:  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forcondBB3  
 		 %t21  =  call getPrime  @N   
 		 %t22  =   mul  0   4 
 		 %t23  =   add  %t22   4 
 		 %t24  =   add  @tmp   %t23 
 		 %t25  = load  %t24 
 		 @primeCount  = move  %t25 
 		 @i  = move  1 
 		 jump %forcondBB5
 
 %forcondBB5:
 preds:  %afterForBB3  %forupdateBB5  
 doms:  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forcondBB3  %forcondBB5  
 		 %t26  = slt  @i   @primeCount 
 		 br  %t26  %forbodyBB5 %afterForBB5 
 
 %afterForBB5:
 preds:  %forcondBB5  
 doms:  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forcondBB3  %forcondBB5  %afterForBB5  
 		 %t27  =  call print  @constStr_0   
 		 %t28  =  call toString  @resultCount   
 		 %t29  =  call println  %t28   
 		 ret  0 
 
 %forbodyBB5:
 preds:  %forcondBB5  
 doms:  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forbodyBB5  %forcondBB3  %forcondBB5  
 		 %t30  =   add  @i   1 
 		 @j  = move  %t30 
 		 jump %forcondBB6
 
 %forcondBB6:
 preds:  %forupdateBB6  %forbodyBB5  
 doms:  %forcondBB1  %forcondBB2  %afterForBB1  %afterForBB2  %main.entryBB1  %forcondBB3  %forcondBB5  %forcondBB6  %forbodyBB5  %afterForBB3  
 		 %t31  = sle  @j   @primeCount 
 		 br  %t31  %forbodyBB6 %afterForBB6 
 
 %afterForBB6:
 preds:  %forcondBB6  
 doms:  %afterForBB6  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forbodyBB5  %forcondBB3  %forcondBB5  %forcondBB6  
 		 jump %forupdateBB5
 
 %forupdateBB5:
 preds:  %afterForBB6  
 doms:  %afterForBB6  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forbodyBB5  %forcondBB3  %forcondBB5  %forcondBB6  %forupdateBB5  
 		 %t32  =   add  @i   1 
 		 @i  = move  %t32 
 		 jump %forcondBB5
 
 %forbodyBB6:
 preds:  %forcondBB6  
 doms:  %forbodyBB6  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forbodyBB5  %forcondBB3  %forcondBB5  %forcondBB6  
 		 %t33  =   mul  @i   4 
 		 %t34  =   add  %t33   4 
 		 %t35  =   add  @result   %t34 
 		 %t36  = load  %t35 
 		 %t37  =   mul  @j   4 
 		 %t38  =   add  %t37   4 
 		 %t39  =   add  %t36   %t38 
 		 %t40  =   sub  0   1 
 		 %t41  = load  %t39 
 		 %t42  = seq  %t41   %t40 
 		 br  %t42  %if_thenBB1 %if_end1 
 
 %if_thenBB1:
 preds:  %forbodyBB6  
 doms:  %forbodyBB6  %afterForBB3  %forcondBB1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forbodyBB5  %if_thenBB1  %forcondBB3  %forcondBB5  %forcondBB6  
 		 %t43  =   mul  @i   4 
 		 %t44  =   add  %t43   4 
 		 %t45  =   add  @result   %t44 
 		 %t46  = load  %t45 
 		 %t47  =   mul  @j   4 
 		 %t48  =   add  %t47   4 
 		 %t49  =   add  %t46   %t48 
 		 %t50  =  call getResult  @N   @i   @j   
 		 store  %t49   %t50 
 		 %t51  =   mul  @i   4 
 		 %t52  =   add  %t51   4 
 		 %t53  =   add  @result   %t52 
 		 %t54  = load  %t53 
 		 %t55  =   mul  @j   4 
 		 %t56  =   add  %t55   4 
 		 %t57  =   add  %t54   %t56 
 		 %t58  = load  %t57 
 		 %t59  = sgt  %t58   1 
 		 br  %t59  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %if_thenBB1  
 doms:  %forcondBB1  %forcondBB2  %afterForBB1  %forbodyBB5  %if_thenBB1  %forbodyBB6  %afterForBB3  %if_thenBB2  %afterForBB2  %main.entryBB1  %forcondBB3  %forcondBB5  %forcondBB6  
 		 %t60  =   mul  @i   4 
 		 %t61  =   add  %t60   4 
 		 %t62  =   add  @prime   %t61 
 		 %t63  = load  %t62 
 		 %t64  =   mul  @j   4 
 		 %t65  =   add  %t64   4 
 		 %t66  =   add  @prime   %t65 
 		 %t67  = load  %t66 
 		 %t68  =   mul  @i   4 
 		 %t69  =   add  %t68   4 
 		 %t70  =   add  @result   %t69 
 		 %t71  = load  %t70 
 		 %t72  =   mul  @j   4 
 		 %t73  =   add  %t72   4 
 		 %t74  =   add  %t71   %t73 
 		 %t75  = load  %t74 
 		 %t76  =  call printF  %t63   %t67   %t75   
 		 %t77  =   add  @resultCount   1 
 		 @resultCount  = move  %t77 
 		 jump %if_end2
 
 %if_end2:
 preds:  %if_thenBB2  %if_thenBB1  
 doms:  %forcondBB1  %forcondBB2  %afterForBB1  %forbodyBB5  %if_thenBB1  %forbodyBB6  %afterForBB3  %if_end2  %afterForBB2  %main.entryBB1  %forcondBB3  %forcondBB5  %forcondBB6  
 		 jump %if_end1
 
 %if_end1:
 preds:  %forbodyBB6  %if_end2  
 doms:  %forbodyBB6  %afterForBB3  %forcondBB1  %if_end1  %forcondBB2  %afterForBB2  %main.entryBB1  %afterForBB1  %forbodyBB5  %forcondBB3  %forcondBB5  %forcondBB6  
 		 jump %forupdateBB6
 
 %forupdateBB6:
 preds:  %if_end1  
 doms:  %forcondBB1  %forcondBB2  %forupdateBB6  %afterForBB1  %forbodyBB5  %forbodyBB6  %afterForBB3  %if_end1  %afterForBB2  %main.entryBB1  %forcondBB3  %forcondBB5  %forcondBB6  
 		 %t78  =   add  @j   1 
 		 @j  = move  %t78 
 		 jump %forcondBB6
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB1  %forbodyBB2  %forcondBB2  %main.entryBB1  %afterForBB1  
 		 %t79  =   mul  @i   4 
 		 %t80  =   add  %t79   4 
 		 %t81  =   add  @prime   %t80 
 		 store  %t81   0 
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %forcondBB1  %forbodyBB2  %forcondBB2  %forupdateBB2  %main.entryBB1  %afterForBB1  
 		 %t82  =   add  @i   1 
 		 @i  = move  %t82 
 		 jump %forcondBB2
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %forbodyBB1  %main.entryBB1  
 		 %t83  =   mul  @i   4 
 		 %t84  =   add  %t83   4 
 		 %t85  =   add  @b   %t84 
 		 store  %t85   1 
 		 %t86  =   mul  @i   4 
 		 %t87  =   add  %t86   4 
 		 %t88  =   add  @gps   %t87 
 		 store  %t88   0 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %forupdateBB1  %forcondBB1  %forbodyBB1  %main.entryBB1  
 		 %t89  =   add  @i   1 
 		 @i  = move  %t89 
 		 jump %forcondBB1
 
 }
 define i32 @printF  %k11 %k21 %k31  {
 %printF.entryBB1:
 preds:  
 doms:  %printF.entryBB1  
 		 %t1  =  call toString  %k11   
 		 %t2  =  call print  %t1   
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %whileBodyBB1  %printF.entryBB1  
 doms:  %printF.entryBB1  %whileCondBB1  
 		 %t3  = sgt  %k31   0 
 		 br  %t3  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %afterWhileBB1  %printF.entryBB1  %whileCondBB1  
 		 %t4  =  call print  @constStr_2   
 		 ret  0 
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %whileBodyBB1  %printF.entryBB1  %whileCondBB1  
 		 %t5  =  call print  @constStr_1   
 		 %t6  =  call toString  %k21   
 		 %t7  =  call print  %t6   
 		 %t8  =   mul  %k21   2 
 		 %t9  =   sub  %t8   %k11 
 		 %k21  = move  %t9 
 		 %t10  =   add  %k11   %k21 
 		 %t11  =   div  %t10   2 
 		 %k11  = move  %t11 
 		 %t12  =   sub  %k31   1 
 		 %k31  = move  %t12 
 		 jump %whileCondBB1
 
 }
 define i32 @getPrime  %N1  {
 %getPrime.entryBB1:
 preds:  
 doms:  %getPrime.entryBB1  
 		 %count1  = move  2 
 		 %i1  = move  2 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %getPrime.entryBB1  %forupdateBB1  
 doms:  %forcondBB1  %getPrime.entryBB1  
 		 %t1  = sle  %i1   %N1 
 		 br  %t1  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %getPrime.entryBB1  %forbodyBB1  
 		 %t2  =   mul  %i1   4 
 		 %t3  =   add  %t2   4 
 		 %t4  =   add  @b   %t3 
 		 %t5  = load  %t4 
 		 %t6  = seq  %t5   1 
 		 br  %t6  %if_thenBB1 %if_end1 
 
 %if_thenBB1:
 preds:  %forbodyBB1  
 doms:  %forcondBB1  %getPrime.entryBB1  %forbodyBB1  %if_thenBB1  
 		 %t7  =   mul  0   4 
 		 %t8  =   add  %t7   4 
 		 %t9  =   add  @tmp   %t8 
 		 %t10  =   mul  0   4 
 		 %t11  =   add  %t10   4 
 		 %t12  =   add  @tmp   %t11 
 		 %t13  = load  %t12 
 		 %t14  =   add  %t13   1 
 		 store  %t9   %t14 
 		 %t15  =   mul  0   4 
 		 %t16  =   add  %t15   4 
 		 %t17  =   add  @tmp   %t16 
 		 %t18  = load  %t17 
 		 %t19  =   mul  %t18   4 
 		 %t20  =   add  %t19   4 
 		 %t21  =   add  @prime   %t20 
 		 store  %t21   %i1 
 		 %t22  =   mul  %i1   4 
 		 %t23  =   add  %t22   4 
 		 %t24  =   add  @gps   %t23 
 		 %t25  =   mul  0   4 
 		 %t26  =   add  %t25   4 
 		 %t27  =   add  @tmp   %t26 
 		 %t28  = load  %t27 
 		 store  %t24   %t28 
 		 jump %if_end1
 
 %if_end1:
 preds:  %forbodyBB1  %if_thenBB1  
 doms:  %forcondBB1  %getPrime.entryBB1  %if_end1  %forbodyBB1  
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %whileBodyBB1  %if_end1  
 doms:  %forcondBB1  %getPrime.entryBB1  %if_end1  %forbodyBB1  %whileCondBB1  
 		 %t29  =   mul  %i1   %count1 
 		 %t30  = sle  %t29   %N1 
 		 br  %t30  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %whileBodyBB1  %forcondBB1  %getPrime.entryBB1  %if_end1  %forbodyBB1  %whileCondBB1  
 		 %t31  =   mul  %i1   %count1 
 		 %t32  =   mul  %t31   4 
 		 %t33  =   add  %t32   4 
 		 %t34  =   add  @b   %t33 
 		 store  %t34   0 
 		 %t35  =   add  %count1   1 
 		 %count1  = move  %t35 
 		 jump %whileCondBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %afterWhileBB1  %forcondBB1  %getPrime.entryBB1  %if_end1  %forbodyBB1  %whileCondBB1  
 		 %count1  = move  2 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %afterWhileBB1  
 doms:  %afterWhileBB1  %forcondBB1  %getPrime.entryBB1  %if_end1  %forbodyBB1  %whileCondBB1  %forupdateBB1  
 		 %t36  =   add  %i1   1 
 		 %i1  = move  %t36 
 		 jump %forcondBB1
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %forcondBB1  %getPrime.entryBB1  
 		 ret  0 
 
 }
 define i32 @getResult  %N1 %k11 %k21  {
 %getResult.entryBB1:
 preds:  
 doms:  %getResult.entryBB1  
 		 %t1  =   mul  %k11   4 
 		 %t2  =   add  %t1   4 
 		 %t3  =   add  @result   %t2 
 		 %t4  = load  %t3 
 		 %t5  =   mul  %k21   4 
 		 %t6  =   add  %t5   4 
 		 %t7  =   add  %t4   %t6 
 		 %t8  =   sub  0   1 
 		 %t9  = load  %t7 
 		 %t10  = seq  %t9   %t8 
 		 br  %t10  %if_thenBB1 %if_end1 
 
 %if_thenBB1:
 preds:  %getResult.entryBB1  
 doms:  %getResult.entryBB1  %if_thenBB1  
 		 %t11  =   mul  %k21   4 
 		 %t12  =   add  %t11   4 
 		 %t13  =   add  @prime   %t12 
 		 %t14  = load  %t13 
 		 %t15  =   mul  %t14   2 
 		 %t16  =   mul  %k11   4 
 		 %t17  =   add  %t16   4 
 		 %t18  =   add  @prime   %t17 
 		 %t19  = load  %t18 
 		 %t20  =   sub  %t15   %t19 
 		 %t21  = sle  %t20   %N1 
 		 br  %t21  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %if_thenBB1  
 doms:  %getResult.entryBB1  %if_thenBB1  %if_thenBB2  
 		 %t22  =   mul  %k21   4 
 		 %t23  =   add  %t22   4 
 		 %t24  =   add  @prime   %t23 
 		 %t25  = load  %t24 
 		 %t26  =   mul  %t25   2 
 		 %t27  =   mul  %k11   4 
 		 %t28  =   add  %t27   4 
 		 %t29  =   add  @prime   %t28 
 		 %t30  = load  %t29 
 		 %t31  =   sub  %t26   %t30 
 		 %t32  =   mul  %t31   4 
 		 %t33  =   add  %t32   4 
 		 %t34  =   add  @b   %t33 
 		 %t35  = load  %t34 
 		 %t36  = sne  %t35   0 
 		 br  %t36  %if_thenBB3 %if_end3 
 
 %if_thenBB3:
 preds:  %if_thenBB2  
 doms:  %if_thenBB3  %getResult.entryBB1  %if_thenBB1  %if_thenBB2  
 		 %t37  =   mul  %k11   4 
 		 %t38  =   add  %t37   4 
 		 %t39  =   add  @result   %t38 
 		 %t40  = load  %t39 
 		 %t41  =   mul  %k21   4 
 		 %t42  =   add  %t41   4 
 		 %t43  =   add  %t40   %t42 
 		 %t44  =   mul  %k21   4 
 		 %t45  =   add  %t44   4 
 		 %t46  =   add  @prime   %t45 
 		 %t47  = load  %t46 
 		 %t48  =   mul  %t47   2 
 		 %t49  =   mul  %k11   4 
 		 %t50  =   add  %t49   4 
 		 %t51  =   add  @prime   %t50 
 		 %t52  = load  %t51 
 		 %t53  =   sub  %t48   %t52 
 		 %t54  =   mul  %t53   4 
 		 %t55  =   add  %t54   4 
 		 %t56  =   add  @gps   %t55 
 		 %t57  = load  %t56 
 		 %t58  =  call getResult  %N1   %k21   %t57   
 		 %t59  =   add  %t58   1 
 		 store  %t43   %t59 
 		 jump %if_end3
 
 %if_end3:
 preds:  %if_thenBB3  %if_thenBB2  
 doms:  %getResult.entryBB1  %if_thenBB1  %if_thenBB2  %if_end3  
 		 jump %if_end2
 
 %if_end2:
 preds:  %if_thenBB1  %if_end3  
 doms:  %getResult.entryBB1  %if_thenBB1  %if_end2  
 		 jump %if_end1
 
 %if_end1:
 preds:  %getResult.entryBB1  %if_end2  
 doms:  %if_end1  %getResult.entryBB1  
 		 %t60  =   mul  %k11   4 
 		 %t61  =   add  %t60   4 
 		 %t62  =   add  @result   %t61 
 		 %t63  = load  %t62 
 		 %t64  =   mul  %k21   4 
 		 %t65  =   add  %t64   4 
 		 %t66  =   add  %t63   %t65 
 		 %t67  =   sub  0   1 
 		 %t68  = load  %t66 
 		 %t69  = seq  %t68   %t67 
 		 br  %t69  %if_thenBB4 %if_end4 
 
 %if_thenBB4:
 preds:  %if_end1  
 doms:  %if_end1  %getResult.entryBB1  %if_thenBB4  
 		 %t70  =   mul  %k11   4 
 		 %t71  =   add  %t70   4 
 		 %t72  =   add  @result   %t71 
 		 %t73  = load  %t72 
 		 %t74  =   mul  %k21   4 
 		 %t75  =   add  %t74   4 
 		 %t76  =   add  %t73   %t75 
 		 store  %t76   1 
 		 jump %if_end4
 
 %if_end4:
 preds:  %if_end1  %if_thenBB4  
 doms:  %if_end1  %if_end4  %getResult.entryBB1  
 		 %t77  =   mul  %k11   4 
 		 %t78  =   add  %t77   4 
 		 %t79  =   add  @result   %t78 
 		 %t80  = load  %t79 
 		 %t81  =   mul  %k21   4 
 		 %t82  =   add  %t81   4 
 		 %t83  =   add  %t80   %t82 
 		 %t84  = load  %t83 
 		 ret  %t84 
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =   mul  1001   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   1001 
 		 @b  = move  %t2 
 		 %t3  =   mul  170   4 
 		 %t3  =   add  %t3   4 
 		 %t4  = alloc  %t3 
 		 store  %t4   170 
 		 @prime  = move  %t4 
 		 %t5  =   mul  1001   4 
 		 %t5  =   add  %t5   4 
 		 %t6  = alloc  %t5 
 		 store  %t6   1001 
 		 @gps  = move  %t6 
 		 %t7  =   mul  1   4 
 		 %t7  =   add  %t7   4 
 		 %t8  = alloc  %t7 
 		 store  %t8   1 
 		 @tmp  = move  %t8 
 		 %t9  =  call main  
 		 ret  
 
 }
