 @pre 
 @c 
 @f 
 @ans 
 @i 
 @closed 
 @j 
 @visit 
 @open 
 define void @origin  %N1  {
 %origin.entryBB1:
 preds:  
 doms:  %origin.entryBB1  
 		 %t1  =   mul  %N1   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   %N1 
 		 @c  = move  %t2 
 		 @i  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %origin.entryBB1  
 doms:  %forcondBB1  %origin.entryBB1  
 		 %t3  = slt  @i   %N1 
 		 br  %t3  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %origin.entryBB1  %forbodyBB1  
 		 %t4  =   mul  @i   4 
 		 %t5  =   add  %t4   4 
 		 %t6  =   add  @c   %t5 
 		 %t7  =   mul  %N1   4 
 		 %t7  =   add  %t7   4 
 		 %t8  = alloc  %t7 
 		 store  %t8   %N1 
 		 store  %t6   %t8 
 		 @j  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %forbodyBB1  
 doms:  %forcondBB2  %forcondBB1  %origin.entryBB1  %forbodyBB1  
 		 %t9  = slt  @j   %N1 
 		 br  %t9  %forbodyBB2 %afterForBB2 
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB2  %forcondBB1  %origin.entryBB1  %forbodyBB1  %forbodyBB2  
 		 %t10  =   mul  @i   4 
 		 %t11  =   add  %t10   4 
 		 %t12  =   add  @c   %t11 
 		 %t13  = load  %t12 
 		 %t14  =   mul  @j   4 
 		 %t15  =   add  %t14   4 
 		 %t16  =   add  %t13   %t15 
 		 store  %t16   0 
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %forcondBB2  %forcondBB1  %forupdateBB2  %origin.entryBB1  %forbodyBB1  %forbodyBB2  
 		 @j  =   add  @j   1 
 		 jump %forcondBB2
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB2  %afterForBB2  %forcondBB1  %origin.entryBB1  %forbodyBB1  
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %afterForBB2  
 doms:  %forupdateBB1  %forcondBB2  %afterForBB2  %forcondBB1  %origin.entryBB1  %forbodyBB1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB1
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %forcondBB1  %origin.entryBB1  
 		 ret  
 
 }
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 call origin  110   
 		 %k1  = move  0 
 		 %start1  = move  99 
 		 %ending1  = move  100 
 		 %flag1  = move  0 
 		 %t1  =  call build  %start1   %ending1   
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %whileBodyBB1  %main.entryBB1  
 doms:  %whileCondBB1  %main.entryBB1  
 		 %t2  =  call find  %ending1   %start1   %flag1   
 		 %t3  = sgt  %t2   0 
 		 br  %t3  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %whileBodyBB1  %whileCondBB1  %main.entryBB1  
 		 %t4  =  call improve  %ending1   
 		 jump %whileCondBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %afterWhileBB1  %whileCondBB1  %main.entryBB1  
 		 %t5  =  call toString  @ans   
 		 %t6  =  call println  %t5   
 		 ret  0 
 
 }
 define i32 @build  %start1 %ending1  {
 %build.entryBB1:
 preds:  
 doms:  %build.entryBB1  
 		 @i  = move  1 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %build.entryBB1  %forupdateBB1  
 doms:  %build.entryBB1  %forcondBB1  
 		 %t1  = sle  @i   49 
 		 br  %t1  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %build.entryBB1  %forcondBB1  %forbodyBB1  
 		 @j  = move  50 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %forbodyBB1  
 doms:  %forcondBB1  %build.entryBB1  %forcondBB2  %forbodyBB1  
 		 %t2  =   sub  98   @i 
 		 %t3  =   add  %t2   1 
 		 %t4  = sle  @j   %t3 
 		 br  %t4  %forbodyBB2 %afterForBB2 
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %build.entryBB1  %forcondBB2  %afterForBB2  %forcondBB1  %forbodyBB1  
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %afterForBB2  
 doms:  %build.entryBB1  %forcondBB2  %afterForBB2  %forupdateBB1  %forcondBB1  %forbodyBB1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB1
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %build.entryBB1  %forbodyBB2  %forcondBB2  %forcondBB1  %forbodyBB1  
 		 %t5  =   mul  @i   4 
 		 %t6  =   add  %t5   4 
 		 %t7  =   add  @c   %t6 
 		 %t8  = load  %t7 
 		 %t9  =   mul  @j   4 
 		 %t10  =   add  %t9   4 
 		 %t11  =   add  %t8   %t10 
 		 store  %t11   1 
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %build.entryBB1  %forbodyBB2  %forcondBB2  %forcondBB1  %forupdateBB2  %forbodyBB1  
 		 @j  =   add  @j   1 
 		 jump %forcondBB2
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %build.entryBB1  %afterForBB1  %forcondBB1  
 		 @i  = move  1 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %forupdateBB3  %afterForBB1  
 doms:  %afterForBB1  %forcondBB1  %forcondBB3  %build.entryBB1  
 		 %t12  = sle  @i   49 
 		 br  %t12  %forbodyBB3 %afterForBB3 
 
 %forbodyBB3:
 preds:  %forcondBB3  
 doms:  %build.entryBB1  %afterForBB1  %forcondBB1  %forbodyBB3  %forcondBB3  
 		 %t13  =   mul  %start1   4 
 		 %t14  =   add  %t13   4 
 		 %t15  =   add  @c   %t14 
 		 %t16  = load  %t15 
 		 %t17  =   mul  @i   4 
 		 %t18  =   add  %t17   4 
 		 %t19  =   add  %t16   %t18 
 		 store  %t19   1 
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %forbodyBB3  
 doms:  %build.entryBB1  %forupdateBB3  %afterForBB1  %forcondBB1  %forbodyBB3  %forcondBB3  
 		 @i  =   add  @i   1 
 		 jump %forcondBB3
 
 %afterForBB3:
 preds:  %forcondBB3  
 doms:  %build.entryBB1  %afterForBB3  %afterForBB1  %forcondBB1  %forcondBB3  
 		 @i  = move  50 
 		 jump %forcondBB4
 
 %forcondBB4:
 preds:  %forupdateBB4  %afterForBB3  
 doms:  %afterForBB1  %forcondBB1  %forcondBB3  %build.entryBB1  %forcondBB4  %afterForBB3  
 		 %t20  = sle  @i   98 
 		 br  %t20  %forbodyBB4 %afterForBB4 
 
 %forbodyBB4:
 preds:  %forcondBB4  
 doms:  %build.entryBB1  %forcondBB4  %afterForBB3  %afterForBB1  %forcondBB1  %forcondBB3  %forbodyBB4  
 		 %t21  =   mul  @i   4 
 		 %t22  =   add  %t21   4 
 		 %t23  =   add  @c   %t22 
 		 %t24  = load  %t23 
 		 %t25  =   mul  %ending1   4 
 		 %t26  =   add  %t25   4 
 		 %t27  =   add  %t24   %t26 
 		 store  %t27   1 
 		 jump %forupdateBB4
 
 %forupdateBB4:
 preds:  %forbodyBB4  
 doms:  %build.entryBB1  %forcondBB4  %forupdateBB4  %afterForBB3  %afterForBB1  %forcondBB1  %forcondBB3  %forbodyBB4  
 		 @i  =   add  @i   1 
 		 jump %forcondBB4
 
 %afterForBB4:
 preds:  %forcondBB4  
 doms:  %build.entryBB1  %forcondBB4  %afterForBB3  %afterForBB1  %forcondBB1  %afterForBB4  %forcondBB3  
 		 ret  0 
 
 }
 define i32 @find  %ending1 %start1 %flag1  {
 %find.entryBB1:
 preds:  
 doms:  %find.entryBB1  
 		 @open  = move  0 
 		 @closed  = move  1 
 		 @i  = move  1 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %find.entryBB1  %forupdateBB1  
 doms:  %find.entryBB1  %forcondBB1  
 		 %t1  = sle  @i   %ending1 
 		 br  %t1  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %find.entryBB1  %forbodyBB1  %forcondBB1  
 		 %t2  =   mul  @i   4 
 		 %t3  =   add  %t2   4 
 		 %t4  =   add  @visit   %t3 
 		 store  %t4   0 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %find.entryBB1  %forbodyBB1  %forcondBB1  %forupdateBB1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB1
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %find.entryBB1  %forcondBB1  
 		 %t5  =   mul  1   4 
 		 %t6  =   add  %t5   4 
 		 %t7  =   add  @f   %t6 
 		 store  %t7   %start1 
 		 %t8  =   mul  %start1   4 
 		 %t9  =   add  %t8   4 
 		 %t10  =   add  @visit   %t9 
 		 store  %t10   1 
 		 %t11  =   mul  %start1   4 
 		 %t12  =   add  %t11   4 
 		 %t13  =   add  @pre   %t12 
 		 store  %t13   0 
 		 %flag1  = move  0 
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %afterForBB1  %afterForBB2  
 doms:  %afterForBB1  %whileCondBB1  %find.entryBB1  %forcondBB1  
 		 %t14  = slt  @open   @closed 
 		 br  %t14  %ifTrue1 %afterWhileBB1 
 
 %ifTrue1:
 preds:  %whileCondBB1  
 doms:  %afterForBB1  %whileCondBB1  %ifTrue1  %find.entryBB1  %forcondBB1  
 		 %t15  = seq  %flag1   0 
 		 br  %t15  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %whileBodyBB1:
 preds:  %ifTrue1  
 doms:  %afterForBB1  %whileCondBB1  %ifTrue1  %find.entryBB1  %forcondBB1  %whileBodyBB1  
 		 @open  =   add  @open   1 
 		 %t16  =   mul  @open   4 
 		 %t17  =   add  %t16   4 
 		 %t18  =   add  @f   %t17 
 		 %t19  = load  %t18 
 		 @i  = move  %t19 
 		 @j  = move  1 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %whileBodyBB1  
 doms:  %whileCondBB1  %find.entryBB1  %forcondBB2  %whileBodyBB1  %afterForBB1  %ifTrue1  %forcondBB1  
 		 %t20  = sle  @j   %ending1 
 		 br  %t20  %forbodyBB2 %afterForBB2 
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB1  %whileCondBB1  %ifTrue1  %find.entryBB1  %forcondBB2  %afterForBB2  %forcondBB1  %whileBodyBB1  
 		 jump %whileCondBB1
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB1  %whileCondBB1  %ifTrue1  %forbodyBB2  %find.entryBB1  %forcondBB2  %forcondBB1  %whileBodyBB1  
 		 %t21  =   mul  @i   4 
 		 %t22  =   add  %t21   4 
 		 %t23  =   add  @c   %t22 
 		 %t24  = load  %t23 
 		 %t25  =   mul  @j   4 
 		 %t26  =   add  %t25   4 
 		 %t27  =   add  %t24   %t26 
 		 %t28  = load  %t27 
 		 %t29  = sgt  %t28   0 
 		 br  %t29  %ifTrue2 %if_end1 
 
 %ifTrue2:
 preds:  %forbodyBB2  
 doms:  %afterForBB1  %whileCondBB1  %ifTrue1  %forbodyBB2  %find.entryBB1  %ifTrue2  %forcondBB2  %forcondBB1  %whileBodyBB1  
 		 %t30  =   mul  @j   4 
 		 %t31  =   add  %t30   4 
 		 %t32  =   add  @visit   %t31 
 		 %t33  = load  %t32 
 		 %t34  = seq  %t33   0 
 		 br  %t34  %if_thenBB1 %if_end1 
 
 %if_thenBB1:
 preds:  %ifTrue2  
 doms:  %afterForBB1  %if_thenBB1  %whileCondBB1  %ifTrue1  %forbodyBB2  %find.entryBB1  %ifTrue2  %forcondBB2  %forcondBB1  %whileBodyBB1  
 		 %t35  =   mul  @j   4 
 		 %t36  =   add  %t35   4 
 		 %t37  =   add  @visit   %t36 
 		 store  %t37   1 
 		 @closed  =   add  @closed   1 
 		 %t38  =   mul  @closed   4 
 		 %t39  =   add  %t38   4 
 		 %t40  =   add  @f   %t39 
 		 store  %t40   @j 
 		 %t41  =   mul  @j   4 
 		 %t42  =   add  %t41   4 
 		 %t43  =   add  @pre   %t42 
 		 store  %t43   @i 
 		 %t44  = seq  @closed   %ending1 
 		 br  %t44  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %if_thenBB1  
 doms:  %afterForBB1  %if_thenBB1  %if_thenBB2  %whileCondBB1  %ifTrue1  %forbodyBB2  %find.entryBB1  %ifTrue2  %forcondBB2  %forcondBB1  %whileBodyBB1  
 		 %flag1  = move  1 
 		 jump %if_end2
 
 %if_end2:
 preds:  %if_thenBB1  %if_thenBB2  
 doms:  %afterForBB1  %if_thenBB1  %whileCondBB1  %ifTrue1  %forbodyBB2  %find.entryBB1  %ifTrue2  %forcondBB2  %forcondBB1  %if_end2  %whileBodyBB1  
 		 jump %if_end1
 
 %if_end1:
 preds:  %forbodyBB2  %ifTrue2  %if_end2  
 doms:  %afterForBB1  %whileCondBB1  %ifTrue1  %forbodyBB2  %find.entryBB1  %forcondBB2  %forcondBB1  %if_end1  %whileBodyBB1  
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %if_end1  
 doms:  %afterForBB1  %whileCondBB1  %ifTrue1  %forbodyBB2  %find.entryBB1  %forcondBB2  %forupdateBB2  %forcondBB1  %if_end1  %whileBodyBB1  
 		 @j  =   add  @j   1 
 		 jump %forcondBB2
 
 %afterWhileBB1:
 preds:  %whileCondBB1  %ifTrue1  
 doms:  %afterForBB1  %whileCondBB1  %find.entryBB1  %afterWhileBB1  %forcondBB1  
 		 ret  %flag1 
 
 }
 define i32 @improve  %ending1  {
 %improve.entryBB1:
 preds:  
 doms:  %improve.entryBB1  
 		 @i  = move  %ending1 
 		 @ans  =   add  @ans   1 
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %whileBodyBB1  %improve.entryBB1  
 doms:  %whileCondBB1  %improve.entryBB1  
 		 %t1  =   mul  @i   4 
 		 %t2  =   add  %t1   4 
 		 %t3  =   add  @pre   %t2 
 		 %t4  = load  %t3 
 		 %t5  = sgt  %t4   0 
 		 br  %t5  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %whileCondBB1  %improve.entryBB1  %afterWhileBB1  
 		 ret  0 
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %whileCondBB1  %whileBodyBB1  %improve.entryBB1  
 		 %t6  =   mul  @i   4 
 		 %t7  =   add  %t6   4 
 		 %t8  =   add  @pre   %t7 
 		 %t9  = load  %t8 
 		 @j  = move  %t9 
 		 %t10  =   mul  @j   4 
 		 %t11  =   add  %t10   4 
 		 %t12  =   add  @c   %t11 
 		 %t13  = load  %t12 
 		 %t14  =   mul  @i   4 
 		 %t15  =   add  %t14   4 
 		 %t16  =   add  %t13   %t15 
 		 %t17  = load  %t16 
 		 %t18  =   sub  %t17   1 
 		 store  %t16   %t18 
 		 %t19  =   mul  @i   4 
 		 %t20  =   add  %t19   4 
 		 %t21  =   add  @c   %t20 
 		 %t22  = load  %t21 
 		 %t23  =   mul  @j   4 
 		 %t24  =   add  %t23   4 
 		 %t25  =   add  %t22   %t24 
 		 %t26  = load  %t25 
 		 %t27  =   add  %t26   1 
 		 store  %t25   %t27 
 		 @i  = move  @j 
 		 jump %whileCondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 @ans  = move  0 
 		 %t1  =   mul  110   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   110 
 		 @visit  = move  %t2 
 		 %t3  =   mul  110   4 
 		 %t3  =   add  %t3   4 
 		 %t4  = alloc  %t3 
 		 store  %t4   110 
 		 @pre  = move  %t4 
 		 %t5  =   mul  110   4 
 		 %t5  =   add  %t5   4 
 		 %t6  = alloc  %t5 
 		 store  %t6   110 
 		 @f  = move  %t6 
 		 %t7  =  call main  
 		 ret  
 
 }
