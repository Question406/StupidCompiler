 @s 
 @t 
 @i 
 @l 
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %t1  =  call getInt  
 		 @t  = move  %t1 
 		 @i  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %main.entryBB1  %forupdateBB1  
 doms:  %main.entryBB1  %forcondBB1  
 		 %t2  = slt  @i   @t 
 		 br  %t2  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %forcondBB1  %forbodyBB1  
 		 %t3  =  call getString  
 		 @s  = move  %t3 
 		 %t4  =  call string.length  @s 
 		 @l  = move  %t4 
 		 %t5  = sgt  @l   10 
 		 br  %t5  %if_thenBB1 %if_elseBB1 
 
 %if_thenBB1:
 preds:  %forbodyBB1  
 doms:  %main.entryBB1  %if_thenBB1  %forcondBB1  %forbodyBB1  
 		 %t6  =  call string.substring  @s 0   1   
 		 %t7  =   sub  @l   2 
 		 %t8  =  call toString  %t7   
 		 %t9  =  call string.add  %t6   %t8   
 		 %t10  =   sub  @l   1 
 		 %t11  =  call string.substring  @s %t10   @l   
 		 %t12  =  call string.add  %t9   %t11   
 		 %t13  =  call println  %t12   
 		 jump %if_end1
 
 %if_elseBB1:
 preds:  %forbodyBB1  
 doms:  %if_elseBB1  %main.entryBB1  %forcondBB1  %forbodyBB1  
 		 %t14  =  call println  @s   
 		 jump %if_end1
 
 %if_end1:
 preds:  %if_elseBB1  %if_thenBB1  
 doms:  %main.entryBB1  %forcondBB1  %if_end1  %forbodyBB1  
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %if_end1  
 doms:  %main.entryBB1  %forcondBB1  %if_end1  %forbodyBB1  %forupdateBB1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB1
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %afterForBB1  %forcondBB1  
 		 ret  0 
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =  call main  
 		 ret  
 
 }
