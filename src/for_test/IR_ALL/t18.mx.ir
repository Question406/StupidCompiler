 @constStr_0 = " "
 @hashsize 
 @table 
 define i32 @getHash  %n1  {
 %getHash.entryBB1:
 preds:  
 doms:  %getHash.entryBB1  
 		 %t1  =   mul  %n1   237 
 		 %t2  =   mod  %t1   @hashsize 
 		 ret  %t2 
 
 }
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %t1  =   mul  100   12 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   100 
 		 @table  = move  %t2 
 		 %i1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %main.entryBB1  %forupdateBB1  
 doms:  %forcondBB1  %main.entryBB1  
 		 %t3  = slt  %i1   @hashsize 
 		 br  %t3  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %forcondBB1  %main.entryBB1  
 		 %i1  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %afterForBB1  %forupdateBB2  
 doms:  %afterForBB1  %forcondBB1  %main.entryBB1  %forcondBB2  
 		 %t4  = slt  %i1   1000 
 		 br  %t4  %forbodyBB2 %afterForBB2 
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB1  %forbodyBB2  %forcondBB1  %main.entryBB1  %forcondBB2  
 		 call put  %i1   %i1   
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %afterForBB1  %forbodyBB2  %forcondBB1  %main.entryBB1  %forupdateBB2  %forcondBB2  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB2
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB2  %afterForBB1  %forcondBB1  %main.entryBB1  %forcondBB2  
 		 %i1  = move  0 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %afterForBB2  %forupdateBB3  
 doms:  %afterForBB2  %afterForBB1  %forcondBB1  %forcondBB3  %main.entryBB1  %forcondBB2  
 		 %t5  = slt  %i1   1000 
 		 br  %t5  %forbodyBB3 %afterForBB3 
 
 %forbodyBB3:
 preds:  %forcondBB3  
 doms:  %afterForBB2  %afterForBB1  %forbodyBB3  %forcondBB1  %forcondBB3  %main.entryBB1  %forcondBB2  
 		 %t6  =  call toString  %i1   
 		 %t7  =  call string.add  %t6   @constStr_0   
 		 %t8  =  call get  %i1   
 		 %t9  =  call toString  %t8   
 		 %t10  =  call string.add  %t7   %t9   
 		 %t11  =  call println  %t10   
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %forbodyBB3  
 doms:  %afterForBB2  %afterForBB1  %forbodyBB3  %forupdateBB3  %forcondBB1  %forcondBB3  %main.entryBB1  %forcondBB2  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB3
 
 %afterForBB3:
 preds:  %forcondBB3  
 doms:  %afterForBB3  %afterForBB2  %afterForBB1  %forcondBB1  %forcondBB3  %main.entryBB1  %forcondBB2  
 		 ret  0 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forbodyBB1  %forcondBB1  %main.entryBB1  
 		 %t12  =   mul  %i1   12 
 		 %t13  =   add  %t12   4 
 		 %t14  =   add  @table   %t13 
 		 store  %t14   0 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %forbodyBB1  %forcondBB1  %main.entryBB1  %forupdateBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB1
 
 }
 define void @put  %key1 %data1  {
 %put.entryBB1:
 preds:  
 doms:  %put.entryBB1  
 		 %ptr1  = move  0 
 		 %t1  =  call getHash  %key1   
 		 %p1  = move  %t1 
 		 %t2  =   mul  %p1   12 
 		 %t3  =   add  %t2   4 
 		 %t4  =   add  @table   %t3 
 		 %t5  = load  %t4 
 		 %t6  = seq  %t5   0 
 		 br  %t6  %if_thenBB1 %if_end1 
 
 %if_end1:
 preds:  %put.entryBB1  
 doms:  %put.entryBB1  %if_end1  
 		 %t7  =   mul  %p1   12 
 		 %t8  =   add  %t7   4 
 		 %t9  =   add  @table   %t8 
 		 %t10  = load  %t9 
 		 %ptr1  = move  %t10 
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %if_end2  %if_end1  
 doms:  %put.entryBB1  %whileCondBB1  %if_end1  
 		 %t11  =   add  %ptr1   0 
 		 %t12  = load  %t11 
 		 %t13  = sne  %t12   %key1 
 		 br  %t13  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %put.entryBB1  %whileCondBB1  %if_end1  %whileBodyBB1  
 		 %t14  =   add  %ptr1   8 
 		 %t15  = load  %t14 
 		 %t16  = seq  %t15   0 
 		 br  %t16  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %whileBodyBB1  
 doms:  %put.entryBB1  %if_thenBB2  %whileCondBB1  %if_end1  %whileBodyBB1  
 		 %t17  =   add  %ptr1   8 
 		 %t18  = alloc  12 
 		 store  %t17   %t18 
 		 %t19  =   add  %ptr1   8 
 		 %t20  = load  %t19 
 		 %t21  =   add  %t20   0 
 		 store  %t21   %key1 
 		 %t22  =   add  %ptr1   8 
 		 %t23  = load  %t22 
 		 %t24  =   add  %t23   8 
 		 store  %t24   0 
 		 jump %if_end2
 
 %if_end2:
 preds:  %if_thenBB2  %whileBodyBB1  
 doms:  %put.entryBB1  %if_end2  %whileCondBB1  %if_end1  %whileBodyBB1  
 		 %t25  =   add  %ptr1   8 
 		 %t26  = load  %t25 
 		 %ptr1  = move  %t26 
 		 jump %whileCondBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %put.entryBB1  %whileCondBB1  %afterWhileBB1  %if_end1  
 		 %t27  =   add  %ptr1   4 
 		 store  %t27   %data1 
 		 jump %put.exitBB1
 
 %if_thenBB1:
 preds:  %put.entryBB1  
 doms:  %put.entryBB1  %if_thenBB1  
 		 %t28  =   mul  %p1   12 
 		 %t29  =   add  %t28   4 
 		 %t30  =   add  @table   %t29 
 		 %t31  = alloc  12 
 		 store  %t30   %t31 
 		 %t32  =   mul  %p1   12 
 		 %t33  =   add  %t32   4 
 		 %t34  =   add  @table   %t33 
 		 %t35  = load  %t34 
 		 %t36  =   add  %t35   0 
 		 store  %t36   %key1 
 		 %t37  =   mul  %p1   12 
 		 %t38  =   add  %t37   4 
 		 %t39  =   add  @table   %t38 
 		 %t40  = load  %t39 
 		 %t41  =   add  %t40   4 
 		 store  %t41   %data1 
 		 %t42  =   mul  %p1   12 
 		 %t43  =   add  %t42   4 
 		 %t44  =   add  @table   %t43 
 		 %t45  = load  %t44 
 		 %t46  =   add  %t45   8 
 		 store  %t46   0 
 		 jump %put.exitBB1
 
 %put.exitBB1:
 preds:  %afterWhileBB1  %if_thenBB1  
 doms:  %put.entryBB1  %put.exitBB1  
 		 ret  
 
 }
 define i32 @get  %key1  {
 %get.entryBB1:
 preds:  
 doms:  %get.entryBB1  
 		 %ptr1  = move  0 
 		 %t1  =  call getHash  %key1   
 		 %t2  =   mul  %t1   12 
 		 %t3  =   add  %t2   4 
 		 %t4  =   add  @table   %t3 
 		 %t5  = load  %t4 
 		 %ptr1  = move  %t5 
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %whileBodyBB1  %get.entryBB1  
 doms:  %whileCondBB1  %get.entryBB1  
 		 %t6  =   add  %ptr1   0 
 		 %t7  = load  %t6 
 		 %t8  = sne  %t7   %key1 
 		 br  %t8  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %whileCondBB1  %get.entryBB1  %afterWhileBB1  
 		 %t9  =   add  %ptr1   4 
 		 %t10  = load  %t9 
 		 ret  %t10 
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %whileBodyBB1  %whileCondBB1  %get.entryBB1  
 		 %t11  =   add  %ptr1   8 
 		 %t12  = load  %t11 
 		 %ptr1  = move  %t12 
 		 jump %whileCondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 @hashsize  = move  100 
 		 %t1  =  call main  
 		 ret  
 
 }
