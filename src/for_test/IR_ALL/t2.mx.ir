 @constStr_0 = ""
 @constStr_1 = " ."
 @constStr_2 = " O"
 @col 
 @d 
 @row 
 @N 
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %i1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %main.entryBB1  %forupdateBB1  
 doms:  %main.entryBB1  %forcondBB1  
 		 %t1  = slt  %i1   2 
 		 br  %t1  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %forcondBB1  %forbodyBB1  
 		 %t2  =   mul  %i1   4 
 		 %t3  =   add  %t2   4 
 		 %t4  =   add  @d   %t3 
 		 %t5  =   add  8   8 
 		 %t6  =   sub  %t5   1 
 		 %t7  =   mul  %t6   4 
 		 %t7  =   add  %t7   4 
 		 %t8  = alloc  %t7 
 		 store  %t8   %t6 
 		 store  %t4   %t8 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %main.entryBB1  %forupdateBB1  %forcondBB1  %forbodyBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB1
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %afterForBB1  %forcondBB1  
 		 call search  0   
 		 ret  0 
 
 }
 define void @printBoard   {
 %printBoard.entryBB1:
 preds:  
 doms:  %printBoard.entryBB1  
 		 %i1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %printBoard.entryBB1  
 doms:  %printBoard.entryBB1  %forcondBB1  
 		 %t1  = slt  %i1   @N 
 		 br  %t1  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %printBoard.entryBB1  %forcondBB1  %afterForBB1  
 		 %t2  =  call println  @constStr_0   
 		 ret  
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %printBoard.entryBB1  %forcondBB1  %forbodyBB1  
 		 %j1  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %forbodyBB1  
 doms:  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %forbodyBB1  
 		 %t3  = slt  %j1   @N 
 		 br  %t3  %forbodyBB2 %afterForBB2 
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %afterForBB2  %forbodyBB1  
 		 %t4  =  call println  @constStr_0   
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %afterForBB2  
 doms:  %forupdateBB1  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %afterForBB2  %forbodyBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB1
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %forbodyBB2  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %forbodyBB1  
 		 %t5  =   mul  %i1   4 
 		 %t6  =   add  %t5   4 
 		 %t7  =   add  @col   %t6 
 		 %t8  = load  %t7 
 		 %t9  = seq  %t8   %j1 
 		 br  %t9  %if_thenBB1 %if_elseBB1 
 
 %if_thenBB1:
 preds:  %forbodyBB2  
 doms:  %forbodyBB2  %if_thenBB1  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %forbodyBB1  
 		 %t10  =  call print  @constStr_2   
 		 jump %if_end1
 
 %if_elseBB1:
 preds:  %forbodyBB2  
 doms:  %forbodyBB2  %if_elseBB1  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %forbodyBB1  
 		 %t11  =  call print  @constStr_1   
 		 jump %if_end1
 
 %if_end1:
 preds:  %if_elseBB1  %if_thenBB1  
 doms:  %forbodyBB2  %if_end1  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %forbodyBB1  
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %if_end1  
 doms:  %forbodyBB2  %if_end1  %forupdateBB2  %printBoard.entryBB1  %forcondBB1  %forcondBB2  %forbodyBB1  
 		 %j1  =   add  %j1   1 
 		 jump %forcondBB2
 
 }
 define void @search  %c1  {
 %search.entryBB1:
 preds:  
 doms:  %search.entryBB1  
 		 %t1  = seq  %c1   @N 
 		 br  %t1  %if_thenBB1 %if_elseBB1 
 
 %if_thenBB1:
 preds:  %search.entryBB1  
 doms:  %search.entryBB1  %if_thenBB1  
 		 call printBoard  
 		 jump %if_end1
 
 %if_elseBB1:
 preds:  %search.entryBB1  
 doms:  %if_elseBB1  %search.entryBB1  
 		 %r1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %if_elseBB1  
 doms:  %if_elseBB1  %forcondBB1  %search.entryBB1  
 		 %t2  = slt  %r1   @N 
 		 br  %t2  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %if_elseBB1  %forcondBB1  %search.entryBB1  %afterForBB1  
 		 jump %if_end1
 
 %if_end1:
 preds:  %if_thenBB1  %afterForBB1  
 doms:  %if_end1  %search.entryBB1  
 		 ret  
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forbodyBB1  %if_elseBB1  %forcondBB1  %search.entryBB1  
 		 %t3  =   mul  %r1   4 
 		 %t4  =   add  %t3   4 
 		 %t5  =   add  @row   %t4 
 		 %t6  = load  %t5 
 		 %t7  = seq  %t6   0 
 		 br  %t7  %ifTrue1 %if_end2 
 
 %ifTrue1:
 preds:  %forbodyBB1  
 doms:  %forbodyBB1  %if_elseBB1  %forcondBB1  %ifTrue1  %search.entryBB1  
 		 %t8  =   mul  0   4 
 		 %t9  =   add  %t8   4 
 		 %t10  =   add  @d   %t9 
 		 %t11  =   add  %r1   %c1 
 		 %t12  = load  %t10 
 		 %t13  =   mul  %t11   4 
 		 %t14  =   add  %t13   4 
 		 %t15  =   add  %t12   %t14 
 		 %t16  = load  %t15 
 		 %t17  = seq  %t16   0 
 		 br  %t17  %ifTrue2 %if_end2 
 
 %ifTrue2:
 preds:  %ifTrue1  
 doms:  %forbodyBB1  %if_elseBB1  %forcondBB1  %ifTrue1  %ifTrue2  %search.entryBB1  
 		 %t18  =   mul  1   4 
 		 %t19  =   add  %t18   4 
 		 %t20  =   add  @d   %t19 
 		 %t21  =   add  %r1   @N 
 		 %t22  =   sub  %t21   1 
 		 %t23  =   sub  %t22   %c1 
 		 %t24  = load  %t20 
 		 %t25  =   mul  %t23   4 
 		 %t26  =   add  %t25   4 
 		 %t27  =   add  %t24   %t26 
 		 %t28  = load  %t27 
 		 %t29  = seq  %t28   0 
 		 br  %t29  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %ifTrue2  
 doms:  %forbodyBB1  %if_elseBB1  %if_thenBB2  %forcondBB1  %ifTrue1  %ifTrue2  %search.entryBB1  
 		 %t30  =   mul  1   4 
 		 %t31  =   add  %t30   4 
 		 %t32  =   add  @d   %t31 
 		 %t33  =   add  %r1   @N 
 		 %t34  =   sub  %t33   1 
 		 %t35  =   sub  %t34   %c1 
 		 %t36  = load  %t32 
 		 %t37  =   mul  %t35   4 
 		 %t38  =   add  %t37   4 
 		 %t39  =   add  %t36   %t38 
 		 store  %t39   1 
 		 %t40  =   mul  0   4 
 		 %t41  =   add  %t40   4 
 		 %t42  =   add  @d   %t41 
 		 %t43  =   add  %r1   %c1 
 		 %t44  = load  %t42 
 		 %t45  =   mul  %t43   4 
 		 %t46  =   add  %t45   4 
 		 %t47  =   add  %t44   %t46 
 		 store  %t47   1 
 		 %t48  =   mul  %r1   4 
 		 %t49  =   add  %t48   4 
 		 %t50  =   add  @row   %t49 
 		 store  %t50   1 
 		 %t51  =   mul  %c1   4 
 		 %t52  =   add  %t51   4 
 		 %t53  =   add  @col   %t52 
 		 store  %t53   %r1 
 		 %t54  =   add  %c1   1 
 		 call search  %t54   
 		 %t55  =   mul  %r1   4 
 		 %t56  =   add  %t55   4 
 		 %t57  =   add  @row   %t56 
 		 store  %t57   0 
 		 %t58  =   mul  0   4 
 		 %t59  =   add  %t58   4 
 		 %t60  =   add  @d   %t59 
 		 %t61  =   add  %r1   %c1 
 		 %t62  = load  %t60 
 		 %t63  =   mul  %t61   4 
 		 %t64  =   add  %t63   4 
 		 %t65  =   add  %t62   %t64 
 		 store  %t65   0 
 		 %t66  =   mul  1   4 
 		 %t67  =   add  %t66   4 
 		 %t68  =   add  @d   %t67 
 		 %t69  =   add  %r1   @N 
 		 %t70  =   sub  %t69   1 
 		 %t71  =   sub  %t70   %c1 
 		 %t72  = load  %t68 
 		 %t73  =   mul  %t71   4 
 		 %t74  =   add  %t73   4 
 		 %t75  =   add  %t72   %t74 
 		 store  %t75   0 
 		 jump %if_end2
 
 %if_end2:
 preds:  %forbodyBB1  %if_thenBB2  %ifTrue1  %ifTrue2  
 doms:  %forbodyBB1  %if_end2  %if_elseBB1  %forcondBB1  %search.entryBB1  
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %if_end2  
 doms:  %forbodyBB1  %forupdateBB1  %if_end2  %if_elseBB1  %forcondBB1  %search.entryBB1  
 		 %r1  =   add  %r1   1 
 		 jump %forcondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 @N  = move  8 
 		 %t1  =   mul  8   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   8 
 		 @row  = move  %t2 
 		 %t3  =   mul  8   4 
 		 %t3  =   add  %t3   4 
 		 %t4  = alloc  %t3 
 		 store  %t4   8 
 		 @col  = move  %t4 
 		 %t5  =   mul  2   4 
 		 %t5  =   add  %t5   4 
 		 %t6  = alloc  %t5 
 		 store  %t6   2 
 		 @d  = move  %t6 
 		 %t7  =  call main  
 		 ret  
 
 }
