 @constStr_0 = ")"
 @constStr_1 = "("
 @constStr_2 = ", "
 define void @point.printPoint  %this1  {
 %point.printPoint.entryBB1:
 preds:  
 doms:  %point.printPoint.entryBB1  
 		 %t1  =   add  0   %this1 
 		 %t2  = load  %t1 
 		 %t3  =  call toString  %t2   
 		 %t4  =  call string.add  @constStr_1   %t3   
 		 %t5  =  call string.add  %t4   @constStr_2   
 		 %t6  =   add  4   %this1 
 		 %t7  = load  %t6 
 		 %t8  =  call toString  %t7   
 		 %t9  =  call string.add  %t5   %t8   
 		 %t10  =  call string.add  %t9   @constStr_2   
 		 %t11  =   add  8   %this1 
 		 %t12  = load  %t11 
 		 %t13  =  call toString  %t12   
 		 %t14  =  call string.add  %t10   %t13   
 		 %t15  =  call string.add  %t14   @constStr_0   
 		 %t16  =  call println  %t15   
 		 ret  
 
 }
 define i32 @point.sqrDis  %this1 %other1  {
 %point.sqrDis.entryBB1:
 preds:  
 doms:  %point.sqrDis.entryBB1  
 		 %t1  =   add  0   %this1 
 		 %t2  =   add  %other1   0 
 		 %t3  = load  %t1 
 		 %t4  = load  %t2 
 		 %t5  =   sub  %t3   %t4 
 		 %t6  =   add  0   %this1 
 		 %t7  =   add  %other1   0 
 		 %t8  = load  %t6 
 		 %t9  = load  %t7 
 		 %t10  =   sub  %t8   %t9 
 		 %t11  =   mul  %t5   %t10 
 		 %t12  =   add  4   %this1 
 		 %t13  =   add  %other1   4 
 		 %t14  = load  %t12 
 		 %t15  = load  %t13 
 		 %t16  =   sub  %t14   %t15 
 		 %t17  =   add  4   %this1 
 		 %t18  =   add  %other1   4 
 		 %t19  = load  %t17 
 		 %t20  = load  %t18 
 		 %t21  =   sub  %t19   %t20 
 		 %t22  =   mul  %t16   %t21 
 		 %t23  =   add  %t11   %t22 
 		 %t24  =   add  8   %this1 
 		 %t25  =   add  %other1   8 
 		 %t26  = load  %t24 
 		 %t27  = load  %t25 
 		 %t28  =   sub  %t26   %t27 
 		 %t29  =   add  8   %this1 
 		 %t30  =   add  %other1   8 
 		 %t31  = load  %t29 
 		 %t32  = load  %t30 
 		 %t33  =   sub  %t31   %t32 
 		 %t34  =   mul  %t28   %t33 
 		 %t35  =   add  %t23   %t34 
 		 ret  %t35 
 
 }
 define i32 @point.dot  %this1 %other1  {
 %point.dot.entryBB1:
 preds:  
 doms:  %point.dot.entryBB1  
 		 %t1  =   add  0   %this1 
 		 %t2  =   add  %other1   0 
 		 %t3  = load  %t1 
 		 %t4  = load  %t2 
 		 %t5  =   mul  %t3   %t4 
 		 %t6  =   add  4   %this1 
 		 %t7  =   add  %other1   4 
 		 %t8  = load  %t6 
 		 %t9  = load  %t7 
 		 %t10  =   mul  %t8   %t9 
 		 %t11  =   add  %t5   %t10 
 		 %t12  =   add  8   %this1 
 		 %t13  =   add  %other1   8 
 		 %t14  = load  %t12 
 		 %t15  = load  %t13 
 		 %t16  =   mul  %t14   %t15 
 		 %t17  =   add  %t11   %t16 
 		 ret  %t17 
 
 }
 define i32 @point.sqrLen  %this1  {
 %point.sqrLen.entryBB1:
 preds:  
 doms:  %point.sqrLen.entryBB1  
 		 %t1  =   add  0   %this1 
 		 %t2  =   add  0   %this1 
 		 %t3  = load  %t1 
 		 %t4  = load  %t2 
 		 %t5  =   mul  %t3   %t4 
 		 %t6  =   add  4   %this1 
 		 %t7  =   add  4   %this1 
 		 %t8  = load  %t6 
 		 %t9  = load  %t7 
 		 %t10  =   mul  %t8   %t9 
 		 %t11  =   add  %t5   %t10 
 		 %t12  =   add  8   %this1 
 		 %t13  =   add  8   %this1 
 		 %t14  = load  %t12 
 		 %t15  = load  %t13 
 		 %t16  =   mul  %t14   %t15 
 		 %t17  =   add  %t11   %t16 
 		 ret  %t17 
 
 }
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %t1  = alloc  12 
 		 %a1  = move  %t1 
 		 %t2  = alloc  12 
 		 %b1  = move  %t2 
 		 %t3  = alloc  12 
 		 %c1  = move  %t3 
 		 %t4  = alloc  12 
 		 %d1  = move  %t4 
 		 call point.printPoint  %a1 
 		 %t5  =   sub  0   463 
 		 call point.set  %a1 849   %t5   480   
 		 %t6  =   sub  0   208 
 		 %t7  =   sub  0   150 
 		 call point.set  %b1 %t6   585   %t7   
 		 %t8  =   sub  0   670 
 		 %t9  =   sub  0   742 
 		 call point.set  %c1 360   %t8   %t9   
 		 %t10  =   sub  0   29 
 		 %t11  =   sub  0   591 
 		 %t12  =   sub  0   960 
 		 call point.set  %d1 %t10   %t11   %t12   
 		 %t13  =  call point.add  %a1 %b1   
 		 %t14  =  call point.add  %b1 %c1   
 		 %t15  =  call point.add  %d1 %c1   
 		 %t16  =  call point.sub  %c1 %a1   
 		 %t17  =  call point.sub  %b1 %d1   
 		 %t18  =  call point.sub  %d1 %c1   
 		 %t19  =  call point.add  %c1 %b1   
 		 %t20  =  call point.add  %a1 %b1   
 		 %t21  =  call point.add  %b1 %b1   
 		 %t22  =  call point.add  %c1 %c1   
 		 %t23  =  call point.sub  %a1 %d1   
 		 %t24  =  call point.add  %a1 %b1   
 		 %t25  =  call point.sub  %b1 %c1   
 		 %t26  =  call point.sqrLen  %a1 
 		 %t27  =  call toString  %t26   
 		 %t28  =  call println  %t27   
 		 %t29  =  call point.sqrLen  %b1 
 		 %t30  =  call toString  %t29   
 		 %t31  =  call println  %t30   
 		 %t32  =  call point.sqrDis  %b1 %c1   
 		 %t33  =  call toString  %t32   
 		 %t34  =  call println  %t33   
 		 %t35  =  call point.sqrDis  %d1 %a1   
 		 %t36  =  call toString  %t35   
 		 %t37  =  call println  %t36   
 		 %t38  =  call point.dot  %c1 %a1   
 		 %t39  =  call toString  %t38   
 		 %t40  =  call println  %t39   
 		 %t41  =  call point.cross  %b1 %d1   
 		 call point.printPoint  %t41 
 		 call point.printPoint  %a1 
 		 call point.printPoint  %b1 
 		 call point.printPoint  %c1 
 		 call point.printPoint  %d1 
 		 ret  0 
 
 }
 define void @point.set  %this1 %a_x1 %a_y1 %a_z1  {
 %point.set.entryBB1:
 preds:  
 doms:  %point.set.entryBB1  
 		 %t1  =   add  0   %this1 
 		 store  %t1   %a_x1 
 		 %t2  =   add  4   %this1 
 		 store  %t2   %a_y1 
 		 %t3  =   add  8   %this1 
 		 store  %t3   %a_z1 
 		 ret  
 
 }
 define i32 @point.add  %this1 %other1  {
 %point.add.entryBB1:
 preds:  
 doms:  %point.add.entryBB1  
 		 %t1  =   add  0   %this1 
 		 %t2  =   add  0   %this1 
 		 %t3  =   add  %other1   0 
 		 %t4  = load  %t2 
 		 %t5  = load  %t3 
 		 %t6  =   add  %t4   %t5 
 		 store  %t1   %t6 
 		 %t7  =   add  4   %this1 
 		 %t8  =   add  4   %this1 
 		 %t9  =   add  %other1   4 
 		 %t10  = load  %t8 
 		 %t11  = load  %t9 
 		 %t12  =   add  %t10   %t11 
 		 store  %t7   %t12 
 		 %t13  =   add  8   %this1 
 		 %t14  =   add  8   %this1 
 		 %t15  =   add  %other1   8 
 		 %t16  = load  %t14 
 		 %t17  = load  %t15 
 		 %t18  =   add  %t16   %t17 
 		 store  %t13   %t18 
 		 ret  %this1 
 
 }
 define i32 @point.sub  %this1 %other1  {
 %point.sub.entryBB1:
 preds:  
 doms:  %point.sub.entryBB1  
 		 %t1  =   add  0   %this1 
 		 %t2  =   add  0   %this1 
 		 %t3  =   add  %other1   0 
 		 %t4  = load  %t2 
 		 %t5  = load  %t3 
 		 %t6  =   sub  %t4   %t5 
 		 store  %t1   %t6 
 		 %t7  =   add  4   %this1 
 		 %t8  =   add  4   %this1 
 		 %t9  =   add  %other1   4 
 		 %t10  = load  %t8 
 		 %t11  = load  %t9 
 		 %t12  =   sub  %t10   %t11 
 		 store  %t7   %t12 
 		 %t13  =   add  8   %this1 
 		 %t14  =   add  8   %this1 
 		 %t15  =   add  %other1   8 
 		 %t16  = load  %t14 
 		 %t17  = load  %t15 
 		 %t18  =   sub  %t16   %t17 
 		 store  %t13   %t18 
 		 ret  %this1 
 
 }
 define i32 @point.cross  %this1 %other1  {
 %point.cross.entryBB1:
 preds:  
 doms:  %point.cross.entryBB1  
 		 %t1  = alloc  12 
 		 %retval1  = move  %t1 
 		 %t2  =   add  4   %this1 
 		 %t3  =   add  %other1   8 
 		 %t4  = load  %t2 
 		 %t5  = load  %t3 
 		 %t6  =   mul  %t4   %t5 
 		 %t7  =   add  8   %this1 
 		 %t8  =   add  %other1   4 
 		 %t9  = load  %t7 
 		 %t10  = load  %t8 
 		 %t11  =   mul  %t9   %t10 
 		 %t12  =   sub  %t6   %t11 
 		 %t13  =   add  8   %this1 
 		 %t14  =   add  %other1   0 
 		 %t15  = load  %t13 
 		 %t16  = load  %t14 
 		 %t17  =   mul  %t15   %t16 
 		 %t18  =   add  0   %this1 
 		 %t19  =   add  %other1   8 
 		 %t20  = load  %t18 
 		 %t21  = load  %t19 
 		 %t22  =   mul  %t20   %t21 
 		 %t23  =   sub  %t17   %t22 
 		 %t24  =   add  0   %this1 
 		 %t25  =   add  %other1   4 
 		 %t26  = load  %t24 
 		 %t27  = load  %t25 
 		 %t28  =   mul  %t26   %t27 
 		 %t29  =   add  4   %this1 
 		 %t30  =   add  %other1   0 
 		 %t31  = load  %t29 
 		 %t32  = load  %t30 
 		 %t33  =   mul  %t31   %t32 
 		 %t34  =   sub  %t28   %t33 
 		 call point.set  %retval1 %t12   %t23   %t34   
 		 ret  %retval1 
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =  call main  
 		 ret  
 
 }
 define void @point.point  %this1  {
 %point.point.entryBB1:
 preds:  
 doms:  %point.point.entryBB1  
 		 %t1  =   add  0   %this1 
 		 store  %t1   0 
 		 %t2  =   add  4   %this1 
 		 store  %t2   0 
 		 %t3  =   add  8   %this1 
 		 store  %t3   0 
 		 ret  
 
 }
