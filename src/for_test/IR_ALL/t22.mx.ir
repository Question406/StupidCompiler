 @a 
 @b 
 @i 
 @j 
 define i32 @printNum  %num1  {
 %printNum.entryBB1:
 preds:  
 doms:  %printNum.entryBB1  
 		 %t1  =  call toString  %num1   
 		 %t2  =  call println  %t1   
 		 ret  0 
 
 }
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 @i  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %main.entryBB1  %forupdateBB1  
 doms:  %forcondBB1  %main.entryBB1  
 		 %t1  = slt  @i   4 
 		 br  %t1  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %main.entryBB1  %afterForBB1  
 		 @i  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %afterForBB1  
 doms:  %forcondBB1  %main.entryBB1  %forcondBB2  %afterForBB1  
 		 %t2  = slt  @i   4 
 		 br  %t2  %forbodyBB2 %afterForBB2 
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  
 		 @i  = move  0 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %forupdateBB3  %afterForBB2  
 doms:  %forcondBB1  %main.entryBB1  %afterForBB2  %forcondBB2  %afterForBB1  %forcondBB3  
 		 %t3  = slt  @i   5 
 		 br  %t3  %forbodyBB3 %afterForBB3 
 
 %forbodyBB3:
 preds:  %forcondBB3  
 doms:  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  %forbodyBB3  
 		 %t4  =   mul  @i   8 
 		 %t5  =   add  %t4   4 
 		 %t6  =   add  @b   %t5 
 		 %t7  = alloc  8 
 		 store  %t6   %t7 
 		 %t8  =   mul  @i   8 
 		 %t9  =   add  %t8   4 
 		 %t10  =   add  @b   %t9 
 		 %t11  = load  %t10 
 		 %t12  =   add  %t11   0 
 		 %t13  =   sub  0   1 
 		 store  %t12   %t13 
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %forbodyBB3  
 doms:  %forupdateBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  %forbodyBB3  
 		 @i  =   add  @i   1 
 		 jump %forcondBB3
 
 %afterForBB3:
 preds:  %forcondBB3  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  
 		 %t14  =   mul  3   4 
 		 %t15  =   add  %t14   4 
 		 %t16  =   add  @a   %t15 
 		 %t17  = load  %t16 
 		 %t18  =   mul  9   4 
 		 %t19  =   add  %t18   4 
 		 %t20  =   add  %t17   %t19 
 		 %t21  = load  %t20 
 		 %t22  =  call printNum  %t21   
 		 @i  = move  0 
 		 jump %forcondBB4
 
 %forcondBB4:
 preds:  %afterForBB3  %forupdateBB4  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  %forcondBB4  
 		 %t23  = sle  @i   3 
 		 br  %t23  %forbodyBB4 %afterForBB4 
 
 %afterForBB4:
 preds:  %forcondBB4  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  %forcondBB4  %afterForBB4  
 		 @i  = move  0 
 		 jump %forcondBB5
 
 %forcondBB5:
 preds:  %forupdateBB5  %afterForBB4  
 doms:  %afterForBB3  %forcondBB1  %main.entryBB1  %forcondBB5  %afterForBB2  %forcondBB2  %afterForBB1  %forcondBB3  %afterForBB4  %forcondBB4  
 		 %t24  = sle  @i   3 
 		 br  %t24  %forbodyBB5 %afterForBB5 
 
 %afterForBB5:
 preds:  %forcondBB5  
 doms:  %afterForBB3  %forcondBB1  %forcondBB5  %afterForBB5  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  %afterForBB4  %forcondBB4  
 		 %t25  =   mul  2   4 
 		 %t26  =   add  %t25   4 
 		 %t27  =   add  @a   %t26 
 		 %t28  = load  %t27 
 		 %t29  =   mul  10   4 
 		 %t30  =   add  %t29   4 
 		 %t31  =   add  %t28   %t30 
 		 store  %t31   0 
 		 %t32  =   mul  2   4 
 		 %t33  =   add  %t32   4 
 		 %t34  =   add  @a   %t33 
 		 %t35  = load  %t34 
 		 %t36  =   mul  10   4 
 		 %t37  =   add  %t36   4 
 		 %t38  =   add  %t35   %t37 
 		 %t39  = load  %t38 
 		 %t40  =  call printNum  %t39   
 		 %t41  =   mul  0   8 
 		 %t42  =   add  %t41   4 
 		 %t43  =   add  @b   %t42 
 		 %t44  = load  %t43 
 		 %t45  =   add  %t44   0 
 		 %t46  =   sub  0   2 
 		 store  %t45   %t46 
 		 %t47  =   mul  2   4 
 		 %t48  =   add  %t47   4 
 		 %t49  =   add  @a   %t48 
 		 %t50  = load  %t49 
 		 %t51  =   mul  10   4 
 		 %t52  =   add  %t51   4 
 		 %t53  =   add  %t50   %t52 
 		 %t54  = load  %t53 
 		 %t55  =   mul  %t54   8 
 		 %t56  =   add  %t55   4 
 		 %t57  =   add  @b   %t56 
 		 %t58  = load  %t57 
 		 %t59  =   add  %t58   0 
 		 %t60  =   sub  0   10 
 		 store  %t59   %t60 
 		 %t61  =   mul  0   8 
 		 %t62  =   add  %t61   4 
 		 %t63  =   add  @b   %t62 
 		 %t64  = load  %t63 
 		 %t65  =   add  %t64   0 
 		 %t66  = load  %t65 
 		 %t67  =  call printNum  %t66   
 		 %t68  =   mul  1   8 
 		 %t69  =   add  %t68   4 
 		 %t70  =   add  @b   %t69 
 		 %t71  = load  %t70 
 		 %t72  =   add  %t71   0 
 		 %t73  = load  %t72 
 		 %t74  =  call printNum  %t73   
 		 ret  0 
 
 %forbodyBB5:
 preds:  %forcondBB5  
 doms:  %forbodyBB5  %afterForBB3  %forcondBB1  %forcondBB5  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  %afterForBB4  %forcondBB4  
 		 @j  = move  0 
 		 jump %forcondBB6
 
 %forcondBB6:
 preds:  %forbodyBB5  %forupdateBB6  
 doms:  %forbodyBB5  %afterForBB3  %forcondBB6  %forcondBB1  %forcondBB5  %afterForBB2  %main.entryBB1  %forcondBB2  %afterForBB1  %forcondBB3  %afterForBB4  %forcondBB4  
 		 %t75  = sle  @j   9 
 		 br  %t75  %forbodyBB6 %afterForBB6 
 
 %afterForBB6:
 preds:  %forcondBB6  
 doms:  %forbodyBB5  %afterForBB3  %forcondBB6  %forcondBB1  %main.entryBB1  %forcondBB3  %afterForBB4  %forcondBB5  %afterForBB6  %afterForBB2  %forcondBB2  %afterForBB1  %forcondBB4  
 		 jump %forupdateBB5
 
 %forupdateBB5:
 preds:  %afterForBB6  
 doms:  %forbodyBB5  %afterForBB3  %forcondBB6  %forcondBB1  %main.entryBB1  %forcondBB3  %afterForBB4  %forupdateBB5  %forcondBB5  %afterForBB6  %afterForBB2  %forcondBB2  %afterForBB1  %forcondBB4  
 		 @i  =   add  @i   1 
 		 jump %forcondBB5
 
 %forbodyBB6:
 preds:  %forcondBB6  
 doms:  %forbodyBB5  %afterForBB3  %forcondBB6  %forcondBB1  %main.entryBB1  %forcondBB3  %afterForBB4  %forbodyBB6  %forcondBB5  %afterForBB2  %forcondBB2  %afterForBB1  %forcondBB4  
 		 %t76  =   mul  @i   4 
 		 %t77  =   add  %t76   4 
 		 %t78  =   add  @a   %t77 
 		 %t79  = load  %t78 
 		 %t80  =   mul  @j   4 
 		 %t81  =   add  %t80   4 
 		 %t82  =   add  %t79   %t81 
 		 %t83  = load  %t82 
 		 %t84  =  call printNum  %t83   
 		 jump %forupdateBB6
 
 %forupdateBB6:
 preds:  %forbodyBB6  
 doms:  %forbodyBB5  %afterForBB3  %forcondBB6  %forcondBB1  %main.entryBB1  %forcondBB3  %afterForBB4  %forbodyBB6  %forupdateBB6  %forcondBB5  %afterForBB2  %forcondBB2  %afterForBB1  %forcondBB4  
 		 @j  =   add  @j   1 
 		 jump %forcondBB6
 
 %forbodyBB4:
 preds:  %forcondBB4  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB4  %afterForBB1  %forcondBB3  %forcondBB4  
 		 @j  = move  0 
 		 jump %forcondBB7
 
 %forcondBB7:
 preds:  %forbodyBB4  %forupdateBB7  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB4  %afterForBB1  %forcondBB3  %forcondBB4  %forcondBB7  
 		 %t85  = sle  @j   9 
 		 br  %t85  %forbodyBB7 %afterForBB7 
 
 %forbodyBB7:
 preds:  %forcondBB7  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB4  %afterForBB1  %forcondBB3  %forcondBB4  %forcondBB7  %forbodyBB7  
 		 %t86  =   mul  @i   4 
 		 %t87  =   add  %t86   4 
 		 %t88  =   add  @a   %t87 
 		 %t89  = load  %t88 
 		 %t90  =   mul  @j   4 
 		 %t91  =   add  %t90   4 
 		 %t92  =   add  %t89   %t91 
 		 %t93  =   mul  @i   10 
 		 %t94  =   add  %t93   @j 
 		 store  %t92   %t94 
 		 jump %forupdateBB7
 
 %forupdateBB7:
 preds:  %forbodyBB7  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB4  %afterForBB1  %forcondBB3  %forcondBB4  %forupdateBB7  %forcondBB7  %forbodyBB7  
 		 @j  =   add  @j   1 
 		 jump %forcondBB7
 
 %afterForBB7:
 preds:  %forcondBB7  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB4  %afterForBB1  %forcondBB3  %afterForBB7  %forcondBB4  %forcondBB7  
 		 jump %forupdateBB4
 
 %forupdateBB4:
 preds:  %afterForBB7  
 doms:  %afterForBB3  %forcondBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB4  %forupdateBB4  %afterForBB1  %forcondBB3  %afterForBB7  %forcondBB4  %forcondBB7  
 		 @i  =   add  @i   1 
 		 jump %forcondBB4
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %forbodyBB2  %forcondBB1  %main.entryBB1  %forcondBB2  %afterForBB1  
 		 @j  = move  0 
 		 jump %forcondBB8
 
 %forcondBB8:
 preds:  %forbodyBB2  %forupdateBB8  
 doms:  %forcondBB8  %forbodyBB2  %forcondBB1  %main.entryBB1  %forcondBB2  %afterForBB1  
 		 %t95  = slt  @j   10 
 		 br  %t95  %forbodyBB8 %afterForBB8 
 
 %afterForBB8:
 preds:  %forcondBB8  
 doms:  %forcondBB8  %forbodyBB2  %afterForBB8  %forcondBB1  %main.entryBB1  %forcondBB2  %afterForBB1  
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %afterForBB8  
 doms:  %forcondBB8  %forupdateBB2  %forbodyBB2  %afterForBB8  %forcondBB1  %main.entryBB1  %forcondBB2  %afterForBB1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB2
 
 %forbodyBB8:
 preds:  %forcondBB8  
 doms:  %forcondBB8  %forbodyBB2  %forbodyBB8  %forcondBB1  %main.entryBB1  %forcondBB2  %afterForBB1  
 		 %t96  =   mul  @i   4 
 		 %t97  =   add  %t96   4 
 		 %t98  =   add  @a   %t97 
 		 %t99  = load  %t98 
 		 %t100  =   mul  @j   4 
 		 %t101  =   add  %t100   4 
 		 %t102  =   add  %t99   %t101 
 		 store  %t102   888 
 		 jump %forupdateBB8
 
 %forupdateBB8:
 preds:  %forbodyBB8  
 doms:  %forcondBB8  %forbodyBB2  %forbodyBB8  %forcondBB1  %main.entryBB1  %forcondBB2  %afterForBB1  %forupdateBB8  
 		 @j  =   add  @j   1 
 		 jump %forcondBB8
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forbodyBB1  %forcondBB1  %main.entryBB1  
 		 %t103  =   mul  @i   4 
 		 %t104  =   add  %t103   4 
 		 %t105  =   add  @a   %t104 
 		 %t106  =   mul  11   4 
 		 %t106  =   add  %t106   4 
 		 %t107  = alloc  %t106 
 		 store  %t107   11 
 		 store  %t105   %t107 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %forbodyBB1  %forcondBB1  %main.entryBB1  %forupdateBB1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =   mul  4   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   4 
 		 @a  = move  %t2 
 		 %t3  =   mul  5   8 
 		 %t3  =   add  %t3   4 
 		 %t4  = alloc  %t3 
 		 store  %t4   5 
 		 @b  = move  %t4 
 		 %t5  =  call main  
 		 ret  
 
 }
