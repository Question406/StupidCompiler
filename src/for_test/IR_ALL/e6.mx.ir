 @a 
 @i 
 @k 
 @m 
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %t1  =  call getInt  
 		 @m  = move  %t1 
 		 %t2  =  call getInt  
 		 @k  = move  %t2 
 		 @i  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %main.entryBB1  %forupdateBB1  
 doms:  %main.entryBB1  %forcondBB1  
 		 %t3  = slt  @i   @m 
 		 br  %t3  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %forcondBB1  %afterForBB1  
 		 @i  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %afterForBB1  
 doms:  %main.entryBB1  %forcondBB1  %forcondBB2  %afterForBB1  
 		 %t4  =   mul  @i   4 
 		 %t5  =   add  %t4   4 
 		 %t6  =   add  @a   %t5 
 		 %t7  =   sub  @k   1 
 		 %t8  =   mul  %t7   4 
 		 %t9  =   add  %t8   4 
 		 %t10  =   add  @a   %t9 
 		 %t11  = load  %t6 
 		 %t12  = load  %t10 
 		 %t13  = sge  %t11   %t12 
 		 br  %t13  %ifTrue1 %afterForBB2 
 
 %ifTrue1:
 preds:  %forcondBB2  
 doms:  %main.entryBB1  %forcondBB1  %forcondBB2  %afterForBB1  %ifTrue1  
 		 %t14  =   mul  @i   4 
 		 %t15  =   add  %t14   4 
 		 %t16  =   add  @a   %t15 
 		 %t17  = load  %t16 
 		 %t18  = sgt  %t17   0 
 		 br  %t18  %ifTrue2 %afterForBB2 
 
 %ifTrue2:
 preds:  %ifTrue1  
 doms:  %ifTrue2  %main.entryBB1  %forcondBB1  %forcondBB2  %afterForBB1  %ifTrue1  
 		 %t19  = slt  @i   @m 
 		 br  %t19  %forbodyBB2 %afterForBB2 
 
 %afterForBB2:
 preds:  %ifTrue2  %forcondBB2  %ifTrue1  
 doms:  %main.entryBB1  %forcondBB1  %forcondBB2  %afterForBB1  %afterForBB2  
 		 %t20  =  call printInt  @i   
 		 ret  0 
 
 %forbodyBB2:
 preds:  %ifTrue2  
 doms:  %ifTrue2  %main.entryBB1  %forbodyBB2  %forcondBB1  %forcondBB2  %afterForBB1  %ifTrue1  
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %ifTrue2  %main.entryBB1  %forbodyBB2  %forcondBB1  %forcondBB2  %forupdateBB2  %afterForBB1  %ifTrue1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB2
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %forbodyBB1  %forcondBB1  
 		 %t21  =   mul  @i   4 
 		 %t22  =   add  %t21   4 
 		 %t23  =   add  @a   %t22 
 		 %t24  =  call getInt  
 		 store  %t23   %t24 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %main.entryBB1  %forupdateBB1  %forbodyBB1  %forcondBB1  
 		 @i  =   add  @i   1 
 		 jump %forcondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =   mul  50   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   50 
 		 @a  = move  %t2 
 		 %t3  =  call main  
 		 ret  
 
 }
