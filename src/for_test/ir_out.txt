 @constStr_0 = " "
 @constStr_1 = "\n"
 @a 
 @n 
 define i32 @qsrt  %l1.0 %r1.0  {
 %qsrt.entryBB1:
 		 %_ga1.0  = load  @a 
 		 %i1.0  = move  %l1.0 
 		 %j1.0  = move  %r1.0 
 		 %t1.0  =   add  %l1.0   %r1.0 
 		 %t2.0  =   shr  %t1.0   1 
 		 %t3.0  =   shl  %t2.0   2 
 		 %t4.0  =   add  %t3.0   4 
 		 %t5.0  =   add  %_ga1.0   %t4.0 
 		 %t6.0  = load  %t5.0 
 		 %x1.0  = move  %t6.0 
 		 %j1.1  = move  %j1.0 
 		 %i1.1  = move  %i1.0 
 		 %breaker1  = move  %j1.1 
 		 %j1.1  = move  %j1.1 
 		 %breaker1  = move  %i1.1 
 		 jump %whileCondBB1
 
 %whileCondBB1:
 		 %t7.0  = sle  %i1.1   %j1.1 
 		 br  %t7.0  %paracopy1 %afterWhileBB1 
 
 %paracopy1:
 		 %i1.2  = move  %i1.1 
 		 %breaker2  = move  %i1.2 
 		 jump %whileCondBB2
 
 %whileCondBB2:
 		 %t8.0  =   shl  %i1.2   2 
 		 %t9.0  =   add  %t8.0   4 
 		 %t10.0  =   add  %_ga1.0   %t9.0 
 		 %t11.0  = load  %t10.0 
 		 %t12.0  = slt  %t11.0   %x1.0 
 		 br  %t12.0  %whileBodyBB1 %paracopy2 
 
 %paracopy2:
 		 %j1.2  = move  %j1.1 
 		 %breaker3  = move  %j1.2 
 		 jump %whileCondBB3
 
 %whileCondBB3:
 		 %t13.0  =   shl  %j1.2   2 
 		 %t14.0  =   add  %t13.0   4 
 		 %t15.0  =   add  %_ga1.0   %t14.0 
 		 %t16.0  = load  %t15.0 
 		 %t17.0  = sgt  %t16.0   %x1.0 
 		 br  %t17.0  %whileBodyBB2 %afterWhileBB2 
 
 %whileBodyBB2:
 		 %j1.4  =   sub  %j1.2   1 
 		 %j1.2  = move  %j1.4 
 		 %breaker4  = move  %j1.2 
 		 jump %whileCondBB3
 
 %afterWhileBB2:
 		 %t18.0  = sle  %i1.2   %j1.2 
 		 br  %t18.0  %if_thenBB1 %paracopy3 
 
 %if_thenBB1:
 		 %t19.0  =   shl  %i1.2   2 
 		 %t20.0  =   add  %t19.0   4 
 		 %t21.0  =   add  %_ga1.0   %t20.0 
 		 %t22.0  = load  %t21.0 
 		 %temp1.0  = move  %t22.0 
 		 %t23.0  =   shl  %j1.2   2 
 		 %t24.0  =   add  %t23.0   4 
 		 %t25.0  =   add  %_ga1.0   %t24.0 
 		 %t26.0  =   shl  %i1.2   2 
 		 %t27.0  =   add  %t26.0   4 
 		 %t28.0  =   add  %_ga1.0   %t27.0 
 		 %t29.0  = load  %t25.0 
 		 store  %t28.0   %t29.0 
 		 %t30.0  =   shl  %j1.2   2 
 		 %t31.0  =   add  %t30.0   4 
 		 %t32.0  =   add  %_ga1.0   %t31.0 
 		 store  %t32.0   %temp1.0 
 		 %i1.4  =   add  %i1.2   1 
 		 %j1.3  =   sub  %j1.2   1 
 		 %j1.1  = move  %j1.3 
 		 %i1.1  = move  %i1.4 
 		 %breaker5  = move  %j1.1 
 		 %j1.1  = move  %j1.1 
 		 %breaker5  = move  %i1.1 
 		 jump %whileCondBB1
 
 %paracopy3:
 		 %j1.1  = move  %j1.2 
 		 %i1.1  = move  %i1.2 
 		 %breaker6  = move  %j1.1 
 		 %j1.1  = move  %j1.1 
 		 %breaker6  = move  %i1.1 
 		 jump %whileCondBB1
 
 %whileBodyBB1:
 		 %i1.3  =   add  %i1.2   1 
 		 %i1.2  = move  %i1.3 
 		 %breaker7  = move  %i1.2 
 		 jump %whileCondBB2
 
 %afterWhileBB1:
 		 %t33.0  = slt  %l1.0   %j1.1 
 		 br  %t33.0  %if_thenBB2 %paracopy4 
 
 %if_thenBB2:
 		 store  @a   %_ga1.0 
 		 %t34.0  =  call qsrt  %l1.0   %j1.1   
 		 %_ga1.1  = load  @a 
 		 %_ga1.2  = move  %_ga1.1 
 		 %breaker8  = move  %_ga1.2 
 		 jump %if_end1
 
 %paracopy4:
 		 %_ga1.2  = move  %_ga1.0 
 		 %breaker9  = move  %_ga1.2 
 		 jump %if_end1
 
 %if_end1:
 		 %t35.0  = slt  %i1.1   %r1.0 
 		 br  %t35.0  %if_thenBB3 %paracopy5 
 
 %if_thenBB3:
 		 store  @a   %_ga1.2 
 		 %t36.0  =  call qsrt  %i1.1   %r1.0   
 		 %_ga1.3  = load  @a 
 		 %_ga1.4  = move  %_ga1.3 
 		 %breaker10  = move  %_ga1.4 
 		 jump %if_end2
 
 %paracopy5:
 		 %_ga1.4  = move  %_ga1.2 
 		 %breaker11  = move  %_ga1.4 
 		 jump %if_end2
 
 %if_end2:
 		 store  @a   %_ga1.4 
 		 ret  0 
 
 }
 define i32 @__init   {
 %__init.entryBB1:
 		 %t1.0  = alloc  40404 
 		 store  %t1.0   10100 
 		 %_ga1.0  = move  %t1.0 
 		 %_i1.2  = move  1 
 		 jump %_forcondBB1
 
 %_forcondBB1:
 		 %_t1.0  = sle  %_i1.2   10000 
 		 br  %_t1.0  %_forbodyBB1 %_afterForBB1 
 
 %_forbodyBB1:
 		 %_t2.0  =   sub  10001   %_i1.2 
 		 %_t3.0  =   shl  %_i1.2   2 
 		 %_t4.0  =   add  %_t3.0   4 
 		 %_t5.0  =   add  %_ga1.0   %_t4.0 
 		 store  %_t5.0   %_t2.0 
 		 %_i1.6  =   add  %_i1.2   1 
 		 %_i1.2  = move  %_i1.6 
 		 %breaker1  = move  %_i1.2 
 		 jump %_forcondBB1
 
 %_afterForBB1:
 		 store  @a   %_ga1.0 
 		 %_t6.0  =  call qsrt  1   10000   
 		 %_ga1.1  = load  @a 
 		 %_i1.4  = move  1 
 		 jump %_forcondBB2
 
 %_forcondBB2:
 		 %_t7.0  = sle  %_i1.4   10000 
 		 br  %_t7.0  %_forbodyBB2 %afterCallBB1 
 
 %_forbodyBB2:
 		 %_t8.0  =   shl  %_i1.4   2 
 		 %_t9.0  =   add  %_t8.0   4 
 		 %_t10.0  =   add  %_ga1.1   %_t9.0 
 		 %_t11.0  = load  %_t10.0 
 		 %_t12.0  =  call toString  %_t11.0   
 		 call print  %_t12.0   
 		 call print  @constStr_0   
 		 %_i1.5  =   add  %_i1.4   1 
 		 %_i1.4  = move  %_i1.5 
 		 %breaker2  = move  %_i1.4 
 		 jump %_forcondBB2
 
 %afterCallBB1:
 		 call print  @constStr_1   
 		 store  @a   %_ga1.1 
 		 ret  0 
 
 }
