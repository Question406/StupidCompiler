 @constStr_0 = ""
 @constStr_1 = " "
 @constStr_2 = "Oops!"
 @constStr_3 = ">"
 @constStr_4 = ","
 @constStr_5 = "\n"
 @constStr_6 = "<="
 @countA 
 @countB 
 @countC 
 @something 
 define void @A.A  %this1.0  {
 %A.A.entryBB1:
 preds:  
 succs:  %if_elseBB1  %if_thenBB1  
 		 %_gcountA1.0  = load  @countA 
 		 %_gcountB1.0  = load  @countB 
 		 %t1.0  =   add  12   %this1.0 
 		 %_gcountA1.1  =   add  %_gcountA1.0   1 
 		 store  %t1.0   %_gcountA1.1 
 		 %t2.0  =   add  12   %this1.0 
 		 %t3.0  = load  %t2.0 
 		 %t4.0  =   mod  %t3.0   2 
 		 %t5.0  = seq  %t4.0   0 
 		 br  %t5.0  %if_thenBB1 %if_elseBB1 
 
 %if_thenBB1:
 preds:  %A.A.entryBB1  
 succs:  %if_thenBB2  %if_elseBB2  
 		 %t6.0  =   add  0   %this1.0 
 		 %t7.0  = alloc  16 
 		 store  @countA   %_gcountA1.1 
 		 store  @countB   %_gcountB1.0 
 		 call A.A  %t7.0 
 		 %_gcountB1.1  = load  @countB 
 		 %_gcountA1.2  = load  @countA 
 		 store  %t6.0   %t7.0 
 		 %t8.0  =   mod  %_gcountB1.1   2 
 		 %t9.0  = seq  %t8.0   0 
 		 br  %t9.0  %if_thenBB2 %if_elseBB2 
 
 %if_elseBB2:
 preds:  %if_thenBB1  
 succs:  %if_end1  
 		 %t10.0  =   add  4   %this1.0 
 		 store  %t10.0   0 
 		 jump %if_end1
 
 %if_thenBB2:
 preds:  %if_thenBB1  
 succs:  %if_end1  
 		 %t11.0  =   add  4   %this1.0 
 		 %t12.0  = alloc  8 
 		 store  @countB   %_gcountB1.1 
 		 call B.B  %t12.0 
 		 %_gcountB1.2  = load  @countB 
 		 store  %t11.0   %t12.0 
 		 jump %if_end1
 
 %if_elseBB1:
 preds:  %A.A.entryBB1  
 succs:  %if_end1  
 		 %t13.0  =   add  0   %this1.0 
 		 store  %t13.0   0 
 		 jump %if_end1
 
 %if_end1:
 preds:  %if_elseBB1  %if_thenBB2  %if_elseBB2  
 succs:  %forcondBB1  
 		 %_gcountA1.3  = phi  %if_elseBB1:  %_gcountA1.1   %if_elseBB2:  %_gcountA1.2   %if_thenBB2:  %_gcountA1.2   
 		 %_gcountB1.3  = phi  %if_elseBB1:  %_gcountB1.0   %if_elseBB2:  %_gcountB1.1   %if_thenBB2:  %_gcountB1.2   
 		 %t14.0  =   add  8   %this1.0 
 		 %t15.0  =   mul  2   4 
 		 %t15.1  =   add  %t15.0   4 
 		 %t16.0  = alloc  %t15.1 
 		 store  %t16.0   2 
 		 store  %t14.0   %t16.0 
 		 %t17.0  =   add  8   %this1.0 
 		 %t18.0  = load  %t17.0 
 		 %t19.0  =   mul  0   4 
 		 %t20.0  =   add  %t19.0   4 
 		 %t21.0  =   add  %t18.0   %t20.0 
 		 %t22.0  =   mul  6   4 
 		 %t22.1  =   add  %t22.0   4 
 		 %t23.0  = alloc  %t22.1 
 		 store  %t23.0   6 
 		 %t24.0  = move  %t23.0 
 		 %t24.1  =   add  %t24.0   4 
 		 %t25.0  = move  4 
 		 %t25.1  =   mul  %t25.0   6 
 		 %t26.0  = move  %t23.0 
 		 %t26.1  =   add  %t26.0   %t25.1 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %afterForBB1  %if_end1  
 succs:  %forupdateBB1  %afterForBB2  
 		 %t27.0  = phi  %afterForBB1:  %t27.1   %if_end1:   undef    
 		 %t28.0  = phi  %afterForBB1:  %t28.1   %if_end1:   undef    
 		 %t29.0  = phi  %afterForBB1:  %t29.2   %if_end1:   undef    
 		 %t30.0  = phi  %afterForBB1:  %t30.1   %if_end1:   undef    
 		 %t31.0  = phi  %afterForBB1:  %t31.1   %if_end1:   undef    
 		 %t24.2  = phi  %afterForBB1:  %t24.3   %if_end1:  %t24.1   
 		 %t32.0  = phi  %afterForBB1:  %t32.3   %if_end1:   undef    
 		 %t33.0  = sle  %t24.2   %t26.1 
 		 br  %t33.0  %forupdateBB1 %afterForBB2 
 
 %afterForBB2:
 preds:  %forcondBB1  
 succs:  %if_thenBB3  %if_end2  
 		 %t34.0  =   mul  2   4 
 		 %t35.0  =   add  %t34.0   4 
 		 %t36.0  =   add  %t23.0   %t35.0 
 		 %t37.0  = load  %t36.0 
 		 %t38.0  =   mul  3   4 
 		 %t39.0  =   add  %t38.0   4 
 		 %t40.0  =   add  %t37.0   %t39.0 
 		 %t41.0  = load  %t40.0 
 		 %t42.0  =   mul  3   4 
 		 %t43.0  =   add  %t42.0   4 
 		 %t44.0  =   add  %t41.0   %t43.0 
 		 %t45.0  = load  %t44.0 
 		 store  %t21.0   %t45.0 
 		 %t46.0  =   add  8   %this1.0 
 		 %t47.0  = load  %t46.0 
 		 %t48.0  =   mul  1   4 
 		 %t49.0  =   add  %t48.0   4 
 		 %t50.0  =   add  %t47.0   %t49.0 
 		 store  %t50.0   0 
 		 %t51.0  =   add  8   %this1.0 
 		 %t52.0  = load  %t51.0 
 		 %t53.0  =  call array.size  %t52.0 
 		 %t54.0  = sne  %t53.0   2 
 		 br  %t54.0  %if_thenBB3 %if_end2 
 
 %if_thenBB3:
 preds:  %afterForBB2  
 succs:  %if_end2  
 		 call println  @constStr_2   
 		 jump %if_end2
 
 %if_end2:
 preds:  %if_thenBB3  %afterForBB2  
 succs:  
 		 store  @countA   %_gcountA1.3 
 		 store  @countB   %_gcountB1.3 
 		 ret  
 
 %forupdateBB1:
 preds:  %forcondBB1  
 succs:  %forcondBB2  
 		 %t55.0  =   mul  6   4 
 		 %t55.1  =   add  %t55.0   4 
 		 %t30.1  = alloc  %t55.1 
 		 store  %t30.1   6 
 		 %t32.1  = move  %t30.1 
 		 %t32.2  =   add  %t32.1   4 
 		 %t56.0  = move  4 
 		 %t56.1  =   mul  %t56.0   6 
 		 %t29.1  = move  %t30.1 
 		 %t29.2  =   add  %t29.1   %t56.1 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %afterForBB3  %forupdateBB1  
 succs:  %afterForBB1  %forupdateBB2  
 		 %t27.1  = phi  %afterForBB3:  %t27.3   %forupdateBB1:  %t27.0   
 		 %t28.1  = phi  %afterForBB3:  %t28.4   %forupdateBB1:  %t28.0   
 		 %t31.1  = phi  %afterForBB3:  %t31.2   %forupdateBB1:  %t31.0   
 		 %t32.3  = phi  %afterForBB3:  %t32.4   %forupdateBB1:  %t32.2   
 		 %t57.0  = sle  %t32.3   %t29.2 
 		 br  %t57.0  %forupdateBB2 %afterForBB1 
 
 %forupdateBB2:
 preds:  %forcondBB2  
 succs:  %forcondBB3  
 		 %t58.0  =   mul  6   4 
 		 %t58.1  =   add  %t58.0   4 
 		 %t31.2  = alloc  %t58.1 
 		 store  %t31.2   6 
 		 %t28.2  = move  %t31.2 
 		 %t28.3  =   add  %t28.2   4 
 		 %t59.0  = move  4 
 		 %t59.1  =   mul  %t59.0   6 
 		 %t27.2  = move  %t31.2 
 		 %t27.3  =   add  %t27.2   %t59.1 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %forupdateBB2  %forupdateBB3  
 succs:  %afterForBB3  %forupdateBB3  
 		 %t28.4  = phi  %forupdateBB2:  %t28.3   %forupdateBB3:  %t28.5   
 		 %t60.0  = sle  %t28.4   %t27.3 
 		 br  %t60.0  %forupdateBB3 %afterForBB3 
 
 %forupdateBB3:
 preds:  %forcondBB3  
 succs:  %forcondBB3  
 		 %t61.0  =   mul  6   8 
 		 %t61.1  =   add  %t61.0   4 
 		 %t62.0  = alloc  %t61.1 
 		 store  %t62.0   6 
 		 store  %t28.4   %t62.0 
 		 %t28.5  =   add  %t28.4   4 
 		 jump %forcondBB3
 
 %afterForBB3:
 preds:  %forcondBB3  
 succs:  %forcondBB2  
 		 store  %t32.3   %t31.2 
 		 %t32.4  =   add  %t32.3   4 
 		 jump %forcondBB2
 
 %afterForBB1:
 preds:  %forcondBB2  
 succs:  %forcondBB1  
 		 store  %t24.2   %t30.1 
 		 %t24.3  =   add  %t24.2   4 
 		 jump %forcondBB1
 
 }
 define void @B.B  %this1.0  {
 %B.B.entryBB1:
 preds:  
 succs:  
 		 %_gcountB1.0  = load  @countB 
 		 %t1.0  =   add  0   %this1.0 
 		 %_gcountB1.1  =   add  %_gcountB1.0   1 
 		 store  %t1.0   %_gcountB1.1 
 		 %t2.0  =   add  4   %this1.0 
 		 %t3.0  = alloc  16 
 		 store  @countB   %_gcountB1.1 
 		 call A.A  %t3.0 
 		 %_gcountB1.2  = load  @countB 
 		 %_this1.0  = move  %t3.0 
 		 %_t1.0  =   add  8   %_this1.0 
 		 %_t2.0  = load  %_t1.0 
 		 %_t3.0  =   mul  0   4 
 		 %_t4.0  =   add  %_t3.0   4 
 		 %_t5.0  =   add  %_t2.0   %_t4.0 
 		 %_t6.0  = load  %_t5.0 
 		 %t4.0  = move  %_t6.0 
 		 %t5.0  =   mul  0   8 
 		 %t6.0  =   add  %t5.0   4 
 		 %t7.0  =   add  %t4.0   %t6.0 
 		 %t8.0  = load  %t7.0 
 		 %_this2.0  = move  %t8.0 
 		 %t9.0  = move  %_this2.0 
 		 %_this3.0  = move  %t9.0 
 		 %t10.0  = move  %_this3.0 
 		 store  %t2.0   %t10.0 
 		 store  @countB   %_gcountB1.2 
 		 ret  
 
 }
 define i32 @__init   {
 %__init.entryBB1:
 preds:  
 succs:  %_forbodyBB1  
 		 %_gcountA1.0  = load  @countA 
 		 %_gcountB1.0  = load  @countB 
 		 %_gsomething1.0  = load  @something 
 		 %_gcountC1.0  = load  @countC 
 		 %_i1.0  = move  0 
 		 %_i1.1  = move  0 
 		 jump %_forbodyBB1
 
 %_forbodyBB1:
 preds:  %_forupdateBB1  %__init.entryBB1  
 succs:  %_forupdateBB1  %_if_thenBB1  
 		 %_i1.2  = phi  %_forupdateBB1:  %_i1.3   %__init.entryBB1:  %_i1.1   
 		 %_t1.0  =   and  891   759 
 		 %_t2.0  =   xor  %_i1.2   %_t1.0 
 		 %_t3.0  = seq  %_t2.0   666 
 		 %_t4.0  =  not  0 
 		 %_t5.0  = seq  %_t3.0   %_t4.0 
 		 br  %_t5.0  %_if_thenBB1 %_forupdateBB1 
 
 %_if_thenBB1:
 preds:  %_forbodyBB1  
 succs:  %__if_elseBB1  %__if_thenBB1  
 		 %_t6.0  =  call toString  %_i1.2   
 		 call println  %_t6.0   
 		 %_i2.0  = move  0 
 		 %_t7.0  =  call toString  %_i2.0   
 		 call println  %_t7.0   
 		 %_i3.0  = move  1 
 		 %_t8.0  =  call toString  %_i3.0   
 		 call println  %_t8.0   
 		 %_gcountA1.1  = move  0 
 		 %_gcountB1.1  = move  0 
 		 %_gcountC1.1  = move  0 
 		 %__t1.0  = alloc  8 
 		 store  @countB   %_gcountB1.1 
 		 call B.B  %__t1.0 
 		 %_gcountB1.2  = load  @countB 
 		 %__b1.0  = move  %__t1.0 
 		 %__t2.0  =  call toString  %_gcountA1.1   
 		 %__t3.0  =  call string.add  %__t2.0   @constStr_1   
 		 %__t4.0  =  call toString  %_gcountB1.2   
 		 %__t5.0  =  call string.add  %__t3.0   %__t4.0   
 		 %__t6.0  =  call string.add  %__t5.0   @constStr_1   
 		 %__t7.0  =  call toString  %_gcountC1.1   
 		 %__t8.0  =  call string.add  %__t6.0   %__t7.0   
 		 call println  %__t8.0   
 		 %_gcountA1.2  = move  1 
 		 %_gcountB1.3  = move  1 
 		 %_gcountC1.2  = move  1 
 		 %__t9.0  = alloc  8 
 		 store  @countB   %_gcountB1.3 
 		 call B.B  %__t9.0 
 		 %_gcountB1.4  = load  @countB 
 		 %__b1.1  = move  %__t9.0 
 		 %__t10.0  =   sub  %_gcountA1.2   1 
 		 %__t11.0  =  call toString  %__t10.0   
 		 %__t12.0  =  call string.add  %__t11.0   @constStr_1   
 		 %__t13.0  =   sub  %_gcountB1.4   1 
 		 %__t14.0  =  call toString  %__t13.0   
 		 %__t15.0  =  call string.add  %__t12.0   %__t14.0   
 		 %__t16.0  =  call string.add  %__t15.0   @constStr_1   
 		 %__t17.0  =   sub  %_gcountC1.2   1 
 		 %__t18.0  =  call toString  %__t17.0   
 		 %__t19.0  =  call string.add  %__t16.0   %__t18.0   
 		 call print  %__t19.0   
 		 call print  @constStr_5   
 		 %___this1.0  = move  %_gsomething1.0 
 		 %__t20.0  = move  %___this1.0 
 		 %__t21.0  =   add  %__t20.0   4 
 		 %__t22.0  = load  %__t21.0 
 		 %__t23.0  =   add  %_gsomething1.0   4 
 		 %__t24.0  = load  %__t23.0 
 		 %__t25.0  =  call string.length  %__t24.0 
 		 %__t26.0  =   sub  %__t25.0   1 
 		 %__t27.0  =  call string.substring  %__t22.0 1   %__t26.0   
 		 %__t28.0  =  call string.parseInt  %__t27.0 
 		 %__t29.0  =  call toString  %__t28.0   
 		 call println  %__t29.0   
 		 %__t30.0  =   add  %_gsomething1.0   4 
 		 %__t31.0  = load  %__t30.0 
 		 %__t32.0  =   and  42   21 
 		 %__t33.0  =  call string.ord  %__t31.0 %__t32.0   
 		 %__t34.0  =  call toString  %__t33.0   
 		 %__temp1.0  = move  %__t34.0 
 		 %__t35.0  =   add  %_gsomething1.0   4 
 		 %__t36.0  = load  %__t35.0 
 		 %__t37.0  =  call string.lth  %__temp1.0   %__t36.0   
 		 br  %__t37.0  %__if_thenBB1 %__if_elseBB1 
 
 %__if_thenBB1:
 preds:  %_if_thenBB1  
 succs:  %_whileBodyBB1  
 		 %__t38.0  =   add  %_gsomething1.0   4 
 		 %__t39.0  = load  %__t38.0 
 		 %__t40.0  =  call string.add  %__t39.0   @constStr_3   
 		 %__t41.0  =  call string.add  %__t40.0   %__temp1.0   
 		 call println  %__t41.0   
 		 jump %_whileBodyBB1
 
 %__if_elseBB1:
 preds:  %_if_thenBB1  
 succs:  %_whileBodyBB1  
 		 %__t42.0  =   add  %_gsomething1.0   4 
 		 %__t43.0  = load  %__t42.0 
 		 %__t44.0  =  call string.add  %__t43.0   @constStr_6   
 		 %__t45.0  =  call string.add  %__t44.0   %__temp1.0   
 		 call println  %__t45.0   
 		 jump %_whileBodyBB1
 
 %_whileBodyBB1:
 preds:  %_if_end1  %__if_elseBB1  %_whileBodyBB1  %__if_thenBB1  
 succs:  %_if_end1  %_whileBodyBB1  
 		 %_t9.0  =   mod  %_i1.2   2 
 		 %_t10.0  = seq  %_t9.0   0 
 		 br  %_t10.0  %_whileBodyBB1 %_if_end1 
 
 %_if_end1:
 preds:  %_whileBodyBB1  
 succs:  %_whileBodyBB1  
 		 %_t11.0  =  call toString  %_i1.2   
 		 %_t12.0  =  call string.add  %_t11.0   @constStr_4   
 		 call print  %_t12.0   
 		 jump %_whileBodyBB1
 
 %_forupdateBB1:
 preds:  %_forbodyBB1  
 succs:  %_forbodyBB1  
 		 %_i1.3  =   add  %_i1.2   1 
 		 jump %_forbodyBB1
 
 }
 define i32 @C.Me  %this1.0  {
 %C.Me.entryBB1:
 preds:  
 succs:  
 		 ret  %this1.0 
 
 }
