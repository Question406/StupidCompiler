 @constStr_0 = ""
 @a 
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %t1  =   mul  4   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   4 
 		 %b1  = move  %t2 
 		 %t3  =   mul  0   4 
 		 %t4  =   add  %t3   4 
 		 %t5  =   add  %b1   %t4 
 		 store  %t5   @a 
 		 %t6  =   mul  1   4 
 		 %t7  =   add  %t6   4 
 		 %t8  =   add  %b1   %t7 
 		 store  %t8   @a 
 		 %t9  =   mul  2   4 
 		 %t10  =   add  %t9   4 
 		 %t11  =   add  %b1   %t10 
 		 store  %t11   @a 
 		 %t12  =   mul  3   4 
 		 %t13  =   add  %t12   4 
 		 %t14  =   add  %b1   %t13 
 		 store  %t14   @a 
 		 %t15  =  call array.size  %b1 
 		 %t16  =  call toString  %t15   
 		 %t17  =  call println  %t16   
 		 %i1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %main.entryBB1  
 doms:  %forcondBB1  %main.entryBB1  
 		 %t18  =   mul  0   4 
 		 %t19  =   add  %t18   4 
 		 %t20  =   add  %b1   %t19 
 		 %t21  = load  %t20 
 		 %t22  =  call array.size  %t21 
 		 %t23  = slt  %i1   %t22 
 		 br  %t23  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %afterForBB1  %main.entryBB1  
 		 %i1  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %afterForBB1  %forupdateBB2  
 doms:  %forcondBB2  %forcondBB1  %afterForBB1  %main.entryBB1  
 		 %t24  =   mul  1   4 
 		 %t25  =   add  %t24   4 
 		 %t26  =   add  %b1   %t25 
 		 %t27  = load  %t26 
 		 %t28  =  call array.size  %t27 
 		 %t29  = slt  %i1   %t28 
 		 br  %t29  %forbodyBB2 %afterForBB2 
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB2  %forbodyBB2  %forcondBB1  %afterForBB1  %main.entryBB1  
 		 %t30  =   mul  1   4 
 		 %t31  =   add  %t30   4 
 		 %t32  =   add  %b1   %t31 
 		 %t33  = load  %t32 
 		 %t34  =   mul  %i1   4 
 		 %t35  =   add  %t34   4 
 		 %t36  =   add  %t33   %t35 
 		 %t37  = load  %t36 
 		 %t38  =  call toString  %t37   
 		 %t39  =  call print  %t38   
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %forcondBB2  %forbodyBB2  %forcondBB1  %afterForBB1  %main.entryBB1  %forupdateBB2  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB2
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %forcondBB2  %afterForBB2  %forcondBB1  %afterForBB1  %main.entryBB1  
 		 %t40  =  call println  @constStr_0   
 		 %i1  = move  0 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %forupdateBB3  %afterForBB2  
 doms:  %forcondBB2  %afterForBB2  %forcondBB1  %afterForBB1  %main.entryBB1  %forcondBB3  
 		 %t41  =   mul  2   4 
 		 %t42  =   add  %t41   4 
 		 %t43  =   add  %b1   %t42 
 		 %t44  = load  %t43 
 		 %t45  =  call array.size  %t44 
 		 %t46  = slt  %i1   %t45 
 		 br  %t46  %forbodyBB3 %afterForBB3 
 
 %forbodyBB3:
 preds:  %forcondBB3  
 doms:  %forcondBB2  %forcondBB3  %afterForBB2  %forcondBB1  %afterForBB1  %main.entryBB1  %forbodyBB3  
 		 %t47  =   mul  2   4 
 		 %t48  =   add  %t47   4 
 		 %t49  =   add  %b1   %t48 
 		 %t50  = load  %t49 
 		 %t51  =   mul  %i1   4 
 		 %t52  =   add  %t51   4 
 		 %t53  =   add  %t50   %t52 
 		 store  %t53   0 
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %forbodyBB3  
 doms:  %forcondBB2  %forupdateBB3  %forcondBB3  %afterForBB2  %forcondBB1  %afterForBB1  %main.entryBB1  %forbodyBB3  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB3
 
 %afterForBB3:
 preds:  %forcondBB3  
 doms:  %forcondBB2  %forcondBB3  %afterForBB2  %forcondBB1  %afterForBB1  %afterForBB3  %main.entryBB1  
 		 %i1  = move  0 
 		 jump %forcondBB4
 
 %forcondBB4:
 preds:  %afterForBB3  %forupdateBB4  
 doms:  %forcondBB2  %forcondBB3  %afterForBB2  %forcondBB4  %forcondBB1  %afterForBB1  %afterForBB3  %main.entryBB1  
 		 %t54  =   mul  3   4 
 		 %t55  =   add  %t54   4 
 		 %t56  =   add  %b1   %t55 
 		 %t57  = load  %t56 
 		 %t58  =  call array.size  %t57 
 		 %t59  = slt  %i1   %t58 
 		 br  %t59  %forbodyBB4 %afterForBB4 
 
 %afterForBB4:
 preds:  %forcondBB4  
 doms:  %forcondBB2  %forcondBB3  %afterForBB2  %forcondBB4  %forcondBB1  %afterForBB1  %afterForBB3  %main.entryBB1  %afterForBB4  
 		 ret  0 
 
 %forbodyBB4:
 preds:  %forcondBB4  
 doms:  %forcondBB2  %forcondBB3  %afterForBB2  %forcondBB4  %forbodyBB4  %forcondBB1  %afterForBB1  %afterForBB3  %main.entryBB1  
 		 %t60  =   mul  3   4 
 		 %t61  =   add  %t60   4 
 		 %t62  =   add  %b1   %t61 
 		 %t63  = load  %t62 
 		 %t64  =   mul  %i1   4 
 		 %t65  =   add  %t64   4 
 		 %t66  =   add  %t63   %t65 
 		 %t67  = load  %t66 
 		 %t68  =  call toString  %t67   
 		 %t69  =  call print  %t68   
 		 jump %forupdateBB4
 
 %forupdateBB4:
 preds:  %forbodyBB4  
 doms:  %forcondBB2  %forcondBB3  %afterForBB2  %forcondBB4  %forbodyBB4  %forcondBB1  %afterForBB1  %afterForBB3  %main.entryBB1  %forupdateBB4  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB4
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forbodyBB1  %forcondBB1  %main.entryBB1  
 		 %t70  =   mul  0   4 
 		 %t71  =   add  %t70   4 
 		 %t72  =   add  %b1   %t71 
 		 %t73  = load  %t72 
 		 %t74  =   mul  %i1   4 
 		 %t75  =   add  %t74   4 
 		 %t76  =   add  %t73   %t75 
 		 %t77  =  call getInt  
 		 store  %t76   %t77 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %forupdateBB1  %forbodyBB1  %forcondBB1  %main.entryBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =   mul  4   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   4 
 		 @a  = move  %t2 
 		 %t3  =  call main  
 		 ret  
 
 }
