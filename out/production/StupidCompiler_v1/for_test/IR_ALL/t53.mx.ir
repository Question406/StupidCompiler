 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %la1  = move  5 
 		 %lb1  = move  10 
 		 %t1  =   mul  %lb1   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   %lb1 
 		 %b1  = move  %t2 
 		 %t3  =   mul  2   4 
 		 %t3  =   add  %t3   4 
 		 %t4  = alloc  %t3 
 		 store  %t4   2 
 		 %c1  = move  %t4 
 		 %t5  =   mul  %la1   4 
 		 %t5  =   add  %t5   4 
 		 %t6  = alloc  %t5 
 		 store  %t6   %la1 
 		 %a1  = move  %t6 
 		 %t7  =   mul  0   4 
 		 %t8  =   add  %t7   4 
 		 %t9  =   add  %c1   %t8 
 		 store  %t9   %a1 
 		 %t10  =   mul  1   4 
 		 %t11  =   add  %t10   4 
 		 %t12  =   add  %c1   %t11 
 		 store  %t12   %b1 
 		 %cnt1  = move  0 
 		 %i1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %main.entryBB1  
 doms:  %main.entryBB1  %forcondBB1  
 		 %t13  = slt  %i1   2 
 		 br  %t13  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %forcondBB1  %forbodyBB1  
 		 %j1  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %forupdateBB2  %forbodyBB1  
 doms:  %forbodyBB1  %main.entryBB1  %forcondBB2  %forcondBB1  
 		 %t14  = slt  %j1   %la1 
 		 br  %t14  %forbodyBB2 %afterForBB2 
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %main.entryBB1  %forbodyBB2  %forcondBB2  %forbodyBB1  %forcondBB1  
 		 %t15  =   mul  %i1   4 
 		 %t16  =   add  %t15   4 
 		 %t17  =   add  %c1   %t16 
 		 %t18  = load  %t17 
 		 %t19  =   mul  %j1   4 
 		 %t20  =   add  %t19   4 
 		 %t21  =   add  %t18   %t20 
 		 %cnt1  =   add  %cnt1   1 
 		 store  %t21   %cnt1 
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %forupdateBB2  %main.entryBB1  %forbodyBB2  %forcondBB2  %forbodyBB1  %forcondBB1  
 		 %j1  =   add  %j1   1 
 		 jump %forcondBB2
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB1  %forcondBB1  
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %afterForBB2  
 doms:  %forupdateBB1  %afterForBB2  %main.entryBB1  %forcondBB2  %forbodyBB1  %forcondBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB1
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB1  
 		 %j1  = move  %la1 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %afterForBB1  %forupdateBB3  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB3  %forcondBB1  
 		 %t22  = slt  %j1   %lb1 
 		 br  %t22  %forbodyBB3 %afterForBB3 
 
 %afterForBB3:
 preds:  %forcondBB3  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB3  %afterForBB3  %forcondBB1  
 		 %sum1  = move  0 
 		 %i1  = move  0 
 		 jump %forcondBB4
 
 %forcondBB4:
 preds:  %afterForBB3  %forupdateBB4  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB3  %afterForBB3  %forcondBB1  %forcondBB4  
 		 %t23  = slt  %i1   %la1 
 		 br  %t23  %forbodyBB4 %afterForBB4 
 
 %afterForBB4:
 preds:  %forcondBB4  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB3  %afterForBB3  %afterForBB4  %forcondBB1  %forcondBB4  
 		 %i1  = move  0 
 		 jump %forcondBB5
 
 %forcondBB5:
 preds:  %forupdateBB5  %afterForBB4  
 doms:  %afterForBB1  %forcondBB3  %afterForBB3  %afterForBB4  %forcondBB4  %main.entryBB1  %forcondBB5  %forcondBB1  
 		 %t24  = slt  %i1   %lb1 
 		 br  %t24  %forbodyBB5 %afterForBB5 
 
 %forbodyBB5:
 preds:  %forcondBB5  
 doms:  %afterForBB1  %main.entryBB1  %forbodyBB5  %forcondBB3  %afterForBB3  %afterForBB4  %forcondBB5  %forcondBB1  %forcondBB4  
 		 %t25  =   mul  %i1   4 
 		 %t26  =   add  %t25   4 
 		 %t27  =   add  %b1   %t26 
 		 %t28  = load  %t27 
 		 %t29  =   add  %sum1   %t28 
 		 %sum1  = move  %t29 
 		 jump %forupdateBB5
 
 %forupdateBB5:
 preds:  %forbodyBB5  
 doms:  %afterForBB1  %main.entryBB1  %forupdateBB5  %forbodyBB5  %forcondBB3  %afterForBB3  %afterForBB4  %forcondBB5  %forcondBB1  %forcondBB4  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB5
 
 %afterForBB5:
 preds:  %forcondBB5  
 doms:  %afterForBB5  %afterForBB1  %main.entryBB1  %forcondBB3  %afterForBB3  %afterForBB4  %forcondBB5  %forcondBB1  %forcondBB4  
 		 ret  %sum1 
 
 %forbodyBB4:
 preds:  %forcondBB4  
 doms:  %forbodyBB4  %afterForBB1  %main.entryBB1  %forcondBB3  %afterForBB3  %forcondBB1  %forcondBB4  
 		 %t30  =   mul  %i1   4 
 		 %t31  =   add  %t30   4 
 		 %t32  =   add  %a1   %t31 
 		 %t33  = load  %t32 
 		 %t34  =   add  %sum1   %t33 
 		 %sum1  = move  %t34 
 		 jump %forupdateBB4
 
 %forupdateBB4:
 preds:  %forbodyBB4  
 doms:  %forbodyBB4  %afterForBB1  %main.entryBB1  %forcondBB3  %afterForBB3  %forcondBB1  %forupdateBB4  %forcondBB4  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB4
 
 %forbodyBB3:
 preds:  %forcondBB3  
 doms:  %forbodyBB3  %afterForBB1  %main.entryBB1  %forcondBB3  %forcondBB1  
 		 %t35  =   mul  1   4 
 		 %t36  =   add  %t35   4 
 		 %t37  =   add  %c1   %t36 
 		 %t38  = load  %t37 
 		 %t39  =   mul  %j1   4 
 		 %t40  =   add  %t39   4 
 		 %t41  =   add  %t38   %t40 
 		 %cnt1  =   add  %cnt1   1 
 		 store  %t41   %cnt1 
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %forbodyBB3  
 doms:  %forbodyBB3  %afterForBB1  %main.entryBB1  %forcondBB3  %forupdateBB3  %forcondBB1  
 		 %j1  =   add  %j1   1 
 		 jump %forcondBB3
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =  call main  
 		 ret  
 
 }
