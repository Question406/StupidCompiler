 @constStr_0 = "\n"
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %a1  = move  10000 
 		 %b1  = move  0 
 		 %c1  = move  2800 
 		 %d1  = move  0 
 		 %e1  = move  0 
 		 %t1  =   mul  2801   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   2801 
 		 %f1  = move  %t2 
 		 %g1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %forupdateBB1  %main.entryBB1  
 doms:  %main.entryBB1  %forcondBB1  
 		 %t3  =   sub  %b1   %c1 
 		 %t4  = sne  %t3   0 
 		 br  %t4  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %main.entryBB1  %forcondBB1  %afterForBB1  
 		 jump %forbodyBB2
 
 %forbodyBB2:
 preds:  %forupdateBB2  %afterForBB1  
 doms:  %main.entryBB1  %forcondBB1  %forbodyBB2  %afterForBB1  
 		 %d1  = move  0 
 		 %t5  =   mul  %c1   2 
 		 %g1  = move  %t5 
 		 %t6  = seq  %g1   0 
 		 br  %t6  %if_thenBB1 %if_end1 
 
 %if_thenBB1:
 preds:  %forbodyBB2  
 doms:  %main.entryBB1  %forcondBB1  %forbodyBB2  %if_thenBB1  %afterForBB1  
 		 jump %afterForBB2
 
 %afterForBB2:
 preds:  %if_thenBB1  
 doms:  %main.entryBB1  %forcondBB1  %forbodyBB2  %if_thenBB1  %afterForBB1  %afterForBB2  
 		 %t7  =  call print  @constStr_0   
 		 ret  0 
 
 %if_end1:
 preds:  %forbodyBB2  
 doms:  %if_end1  %main.entryBB1  %forcondBB1  %forbodyBB2  %afterForBB1  
 		 %b1  = move  %c1 
 		 jump %forbodyBB3
 
 %forbodyBB3:
 preds:  %if_end1  %forupdateBB3  
 doms:  %if_end1  %main.entryBB1  %forcondBB1  %forbodyBB3  %forbodyBB2  %afterForBB1  
 		 %t8  =   mul  %b1   4 
 		 %t9  =   add  %t8   4 
 		 %t10  =   add  %f1   %t9 
 		 %t11  = load  %t10 
 		 %t12  =   mul  %t11   %a1 
 		 %t13  =   add  %d1   %t12 
 		 %d1  = move  %t13 
 		 %t14  =   mul  %b1   4 
 		 %t15  =   add  %t14   4 
 		 %t16  =   add  %f1   %t15 
 		 %g1  =   sub  %g1   1 
 		 %t17  =   mod  %d1   %g1 
 		 store  %t16   %t17 
 		 %t18  =   div  %d1   %g1 
 		 %d1  = move  %t18 
 		 %g1  =   sub  %g1   1 
 		 %b1  =   sub  %b1   1 
 		 %t19  = seq  %b1   0 
 		 br  %t19  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %forbodyBB3  
 doms:  %if_end1  %main.entryBB1  %forcondBB1  %forbodyBB3  %forbodyBB2  %if_thenBB2  %afterForBB1  
 		 jump %afterForBB3
 
 %afterForBB3:
 preds:  %if_thenBB2  
 doms:  %afterForBB3  %if_end1  %main.entryBB1  %forcondBB1  %forbodyBB3  %forbodyBB2  %if_thenBB2  %afterForBB1  
 		 %t20  =   sub  %c1   14 
 		 %c1  = move  %t20 
 		 %t21  =   div  %d1   %a1 
 		 %t22  =   add  %e1   %t21 
 		 %t23  =  call toString  %t22   
 		 %t24  =  call print  %t23   
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %afterForBB3  
 doms:  %forupdateBB2  %afterForBB3  %if_end1  %main.entryBB1  %forcondBB1  %forbodyBB3  %forbodyBB2  %if_thenBB2  %afterForBB1  
 		 %t25  =   mod  %d1   %a1 
 		 %e1  = move  %t25 
 		 jump %forbodyBB2
 
 %if_end2:
 preds:  %forbodyBB3  
 doms:  %if_end1  %main.entryBB1  %forcondBB1  %if_end2  %forbodyBB3  %forbodyBB2  %afterForBB1  
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %if_end2  
 doms:  %if_end1  %main.entryBB1  %forcondBB1  %if_end2  %forbodyBB3  %forbodyBB2  %afterForBB1  %forupdateBB3  
 		 %t26  =   mul  %d1   %b1 
 		 %d1  = move  %t26 
 		 jump %forbodyBB3
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forbodyBB1  %main.entryBB1  %forcondBB1  
 		 %t27  =   mul  %b1   4 
 		 %t28  =   add  %t27   4 
 		 %t29  =   add  %f1   %t28 
 		 %t30  =   div  %a1   5 
 		 store  %t29   %t30 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %forbodyBB1  %forupdateBB1  %main.entryBB1  %forcondBB1  
 		 %b1  =   add  %b1   1 
 		 jump %forcondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =  call main  
 		 ret  
 
 }
