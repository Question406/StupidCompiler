 @constStr_0 = "Total: "
 @constStr_1 = " "
 @b 
 @resultCount 
 @N 
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %i1  = move  1 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %main.entryBB1  %forupdateBB1  
 doms:  %main.entryBB1  %forcondBB1  
 		 %t1  = sle  %i1   @N 
 		 br  %t1  %forbodyBB1 %afterForBB1 
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB1  
 		 %i1  = move  2 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %afterForBB1  %forupdateBB2  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB2  %forcondBB1  
 		 %t2  = sle  %i1   @N 
 		 br  %t2  %forbodyBB2 %afterForBB2 
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB2  %forbodyBB2  %forcondBB1  
 		 %t3  =   mul  %i1   4 
 		 %t4  =   add  %t3   4 
 		 %t5  =   add  @b   %t4 
 		 %t6  = load  %t5 
 		 br  %t6  %if_thenBB1 %if_end1 
 
 %if_thenBB1:
 preds:  %forbodyBB2  
 doms:  %if_thenBB1  %afterForBB1  %main.entryBB1  %forcondBB2  %forbodyBB2  %forcondBB1  
 		 %count1  = move  2 
 		 %t7  = sgt  %i1   3 
 		 br  %t7  %ifTrue1 %if_end2 
 
 %ifTrue1:
 preds:  %if_thenBB1  
 doms:  %if_thenBB1  %ifTrue1  %afterForBB1  %main.entryBB1  %forcondBB2  %forbodyBB2  %forcondBB1  
 		 %t8  =   sub  %i1   2 
 		 %t9  =   mul  %t8   4 
 		 %t10  =   add  %t9   4 
 		 %t11  =   add  @b   %t10 
 		 %t12  = load  %t11 
 		 br  %t12  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %ifTrue1  
 doms:  %if_thenBB1  %ifTrue1  %if_thenBB2  %afterForBB1  %main.entryBB1  %forcondBB2  %forbodyBB2  %forcondBB1  
 		 @resultCount  =   add  @resultCount   1 
 		 %t13  =   sub  %i1   2 
 		 %t14  =  call toString  %t13   
 		 %t15  =  call string.add  %t14   @constStr_1   
 		 %t16  =  call toString  %i1   
 		 %t17  =  call string.add  %t15   %t16   
 		 %t18  =  call println  %t17   
 		 jump %if_end2
 
 %if_end2:
 preds:  %if_thenBB1  %ifTrue1  %if_thenBB2  
 doms:  %if_thenBB1  %if_end2  %afterForBB1  %main.entryBB1  %forcondBB2  %forbodyBB2  %forcondBB1  
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %whileBodyBB1  %if_end2  
 doms:  %whileCondBB1  %main.entryBB1  %forcondBB2  %forbodyBB2  %if_thenBB1  %if_end2  %afterForBB1  %forcondBB1  
 		 %t19  =   mul  %i1   %count1 
 		 %t20  = sle  %t19   @N 
 		 br  %t20  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %if_thenBB1  %whileCondBB1  %if_end2  %afterForBB1  %main.entryBB1  %afterWhileBB1  %forcondBB2  %forbodyBB2  %forcondBB1  
 		 jump %if_end1
 
 %if_end1:
 preds:  %afterWhileBB1  %forbodyBB2  
 doms:  %afterForBB1  %main.entryBB1  %forcondBB2  %if_end1  %forbodyBB2  %forcondBB1  
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %if_end1  
 doms:  %afterForBB1  %main.entryBB1  %forupdateBB2  %forcondBB2  %if_end1  %forbodyBB2  %forcondBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB2
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %if_thenBB1  %whileCondBB1  %whileBodyBB1  %if_end2  %afterForBB1  %main.entryBB1  %forcondBB2  %forbodyBB2  %forcondBB1  
 		 %t21  =   mul  %i1   %count1 
 		 %t22  =   mul  %t21   4 
 		 %t23  =   add  %t22   4 
 		 %t24  =   add  @b   %t23 
 		 store  %t24   0 
 		 %count1  =   add  %count1   1 
 		 jump %whileCondBB1
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB2  %afterForBB1  %main.entryBB1  %forcondBB2  %forcondBB1  
 		 %t25  =  call toString  @resultCount   
 		 %t26  =  call string.add  @constStr_0   %t25   
 		 %t27  =  call println  %t26   
 		 ret  0 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forbodyBB1  %main.entryBB1  %forcondBB1  
 		 %t28  =   mul  %i1   4 
 		 %t29  =   add  %t28   4 
 		 %t30  =   add  @b   %t29 
 		 store  %t30   1 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %forbodyBB1  %main.entryBB1  %forupdateBB1  %forcondBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 @N  = move  15000 
 		 %t1  =   mul  15001   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   15001 
 		 @b  = move  %t2 
 		 @resultCount  = move  0 
 		 %t3  =  call main  
 		 ret  
 
 }
