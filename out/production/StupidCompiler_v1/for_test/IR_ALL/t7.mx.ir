 @constStr_0 = ""
 @a 
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %t1  =  call array.size  @a 
 		 %t2  =   mul  %t1   4 
 		 %t2  =   add  %t2   4 
 		 %t3  = alloc  %t2 
 		 store  %t3   %t1 
 		 %b1  = move  %t3 
 		 %i1  = move  0 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %main.entryBB1  %forupdateBB1  
 doms:  %forcondBB1  %main.entryBB1  
 		 %t4  =  call array.size  @a 
 		 %t5  = slt  %i1   %t4 
 		 br  %t5  %forbodyBB1 %afterForBB1 
 
 %forbodyBB1:
 preds:  %forcondBB1  
 doms:  %forcondBB1  %forbodyBB1  %main.entryBB1  
 		 %t6  =   mul  %i1   4 
 		 %t7  =   add  %t6   4 
 		 %t8  =   add  @a   %t7 
 		 store  %t8   0 
 		 %t9  =   mul  %i1   4 
 		 %t10  =   add  %t9   4 
 		 %t11  =   add  %b1   %t10 
 		 %t12  =  call getInt  
 		 store  %t11   %t12 
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %forbodyBB1  
 doms:  %forcondBB1  %forbodyBB1  %main.entryBB1  %forupdateBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB1
 
 %afterForBB1:
 preds:  %forcondBB1  
 doms:  %afterForBB1  %forcondBB1  %main.entryBB1  
 		 %i1  = move  0 
 		 jump %forcondBB2
 
 %forcondBB2:
 preds:  %afterForBB1  %forupdateBB2  
 doms:  %afterForBB1  %forcondBB1  %forcondBB2  %main.entryBB1  
 		 %t13  =  call array.size  @a 
 		 %t14  = slt  %i1   %t13 
 		 br  %t14  %forbodyBB2 %afterForBB2 
 
 %forbodyBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB1  %forcondBB1  %forbodyBB2  %forcondBB2  %main.entryBB1  
 		 %t15  =   mul  %i1   4 
 		 %t16  =   add  %t15   4 
 		 %t17  =   add  @a   %t16 
 		 %t18  = load  %t17 
 		 %t19  =  call toString  %t18   
 		 %t20  =  call print  %t19   
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %forbodyBB2  
 doms:  %afterForBB1  %forcondBB1  %forbodyBB2  %forcondBB2  %forupdateBB2  %main.entryBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB2
 
 %afterForBB2:
 preds:  %forcondBB2  
 doms:  %afterForBB2  %afterForBB1  %forcondBB1  %forcondBB2  %main.entryBB1  
 		 %t21  =  call println  @constStr_0   
 		 @a  = move  %b1 
 		 %i1  = move  0 
 		 jump %forcondBB3
 
 %forcondBB3:
 preds:  %afterForBB2  %forupdateBB3  
 doms:  %forcondBB3  %afterForBB2  %afterForBB1  %forcondBB1  %forcondBB2  %main.entryBB1  
 		 %t22  =  call array.size  @a 
 		 %t23  = slt  %i1   %t22 
 		 br  %t23  %forbodyBB3 %afterForBB3 
 
 %afterForBB3:
 preds:  %forcondBB3  
 doms:  %forcondBB3  %afterForBB2  %afterForBB3  %afterForBB1  %forcondBB1  %forcondBB2  %main.entryBB1  
 		 ret  0 
 
 %forbodyBB3:
 preds:  %forcondBB3  
 doms:  %forcondBB3  %afterForBB2  %forbodyBB3  %afterForBB1  %forcondBB1  %forcondBB2  %main.entryBB1  
 		 %t24  =   mul  %i1   4 
 		 %t25  =   add  %t24   4 
 		 %t26  =   add  @a   %t25 
 		 %t27  = load  %t26 
 		 %t28  =  call toString  %t27   
 		 %t29  =  call print  %t28   
 		 jump %forupdateBB3
 
 %forupdateBB3:
 preds:  %forbodyBB3  
 doms:  %forcondBB3  %afterForBB2  %forbodyBB3  %afterForBB1  %forcondBB1  %forupdateBB3  %forcondBB2  %main.entryBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forcondBB3
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 %t1  =   mul  4   4 
 		 %t1  =   add  %t1   4 
 		 %t2  = alloc  %t1 
 		 store  %t2   4 
 		 @a  = move  %t2 
 		 %t3  =  call main  
 		 ret  
 
 }
