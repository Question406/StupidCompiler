 @check 
 @M 
 @N 
 define i32 @main   {
 %main.entryBB1:
 preds:  
 doms:  %main.entryBB1  
 		 %t1  =  call getInt  
 		 @N  = move  %t1 
 		 %t2  =   add  @N   5 
 		 %t3  =   mul  %t2   4 
 		 %t3  =   add  %t3   4 
 		 %t4  = alloc  %t3 
 		 store  %t4   %t2 
 		 @check  = move  %t4 
 		 %i1  = move  0 
 		 jump %whileCondBB1
 
 %whileCondBB1:
 preds:  %whileBodyBB1  %main.entryBB1  
 doms:  %whileCondBB1  %main.entryBB1  
 		 %t5  = sle  %i1   @N 
 		 br  %t5  %whileBodyBB1 %afterWhileBB1 
 		 jump %whileBodyBB1
 
 %afterWhileBB1:
 preds:  %whileCondBB1  
 doms:  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %t6  =   add  @N   5 
 		 %t7  =   mul  %t6   4 
 		 %t7  =   add  %t7   4 
 		 %t8  = alloc  %t7 
 		 store  %t8   %t6 
 		 %phi1  = move  %t8 
 		 %t9  =   add  @N   5 
 		 %t10  =   mul  %t9   4 
 		 %t10  =   add  %t10   4 
 		 %t11  = alloc  %t10 
 		 store  %t11   %t9 
 		 %P1  = move  %t11 
 		 %t12  =   mul  1   4 
 		 %t13  =   add  %t12   4 
 		 %t14  =   add  %phi1   %t13 
 		 store  %t14   1 
 		 %i1  = move  2 
 		 jump %forbodyBB1
 
 %forbodyBB1:
 preds:  %forupdateBB1  %afterWhileBB1  
 doms:  %forbodyBB1  %whileCondBB1  %afterWhileBB1  %main.entryBB1  
 		 %t15  = sgt  %i1   @N 
 		 br  %t15  %if_thenBB1 %if_end1 
 
 %if_end1:
 preds:  %forbodyBB1  
 doms:  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %t16  =   mul  %i1   4 
 		 %t17  =   add  %t16   4 
 		 %t18  =   add  @check   %t17 
 		 %t19  = load  %t18 
 		 br  %t19  %if_thenBB2 %if_end2 
 
 %if_thenBB2:
 preds:  %if_end1  
 doms:  %if_thenBB2  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 @M  =   add  @M   1 
 		 %t20  =   mul  @M   4 
 		 %t21  =   add  %t20   4 
 		 %t22  =   add  %P1   %t21 
 		 store  %t22   %i1 
 		 %t23  =   mul  %i1   4 
 		 %t24  =   add  %t23   4 
 		 %t25  =   add  %phi1   %t24 
 		 %t26  =   sub  %i1   1 
 		 store  %t25   %t26 
 		 jump %if_end2
 
 %if_end2:
 preds:  %if_thenBB2  %if_end1  
 doms:  %if_end2  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %k1  = move  %i1 
 		 %i2  = move  1 
 		 jump %forcondBB1
 
 %forcondBB1:
 preds:  %if_end2  %forupdateBB2  
 doms:  %if_end2  %forcondBB1  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %t27  = sle  %i2   @M 
 		 br  %t27  %ifTrue1 %afterForBB1 
 
 %ifTrue1:
 preds:  %forcondBB1  
 doms:  %ifTrue1  %if_end2  %forcondBB1  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %t28  =   mul  %i2   4 
 		 %t29  =   add  %t28   4 
 		 %t30  =   add  %P1   %t29 
 		 %t31  = load  %t30 
 		 %t32  =   mul  %k1   %t31 
 		 %t33  = sle  %t32   @N 
 		 br  %t33  %forbodyBB2 %afterForBB1 
 
 %forbodyBB2:
 preds:  %ifTrue1  
 doms:  %ifTrue1  %if_end2  %forbodyBB2  %forcondBB1  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %t34  =   mul  %i2   4 
 		 %t35  =   add  %t34   4 
 		 %t36  =   add  %P1   %t35 
 		 %t37  = load  %t36 
 		 %t38  =   mul  %k1   %t37 
 		 %tmp1  = move  %t38 
 		 %t39  = sgt  %tmp1   @N 
 		 br  %t39  %if_thenBB3 %if_end3 
 
 %if_end3:
 preds:  %forbodyBB2  
 doms:  %ifTrue1  %if_end2  %forbodyBB2  %forcondBB1  %if_end1  %forbodyBB1  %afterWhileBB1  %if_end3  %main.entryBB1  %whileCondBB1  
 		 %t40  =   mul  %tmp1   4 
 		 %t41  =   add  %t40   4 
 		 %t42  =   add  @check   %t41 
 		 store  %t42   0 
 		 %t43  =   mul  %i2   4 
 		 %t44  =   add  %t43   4 
 		 %t45  =   add  %P1   %t44 
 		 %t46  = load  %t45 
 		 %t47  =   mod  %k1   %t46 
 		 %t48  = seq  %t47   0 
 		 br  %t48  %if_thenBB4 %if_elseBB1 
 
 %if_elseBB1:
 preds:  %if_end3  
 doms:  %ifTrue1  %if_end2  %forbodyBB2  %forcondBB1  %if_end1  %forbodyBB1  %if_elseBB1  %afterWhileBB1  %if_end3  %main.entryBB1  %whileCondBB1  
 		 %t49  =   mul  %i2   4 
 		 %t50  =   add  %t49   4 
 		 %t51  =   add  %P1   %t50 
 		 %t52  = load  %t51 
 		 %t53  =   mul  %k1   %t52 
 		 %t54  =   mul  %t53   4 
 		 %t55  =   add  %t54   4 
 		 %t56  =   add  %phi1   %t55 
 		 %t57  =   mul  %k1   4 
 		 %t58  =   add  %t57   4 
 		 %t59  =   add  %phi1   %t58 
 		 %t60  =   mul  %i2   4 
 		 %t61  =   add  %t60   4 
 		 %t62  =   add  %P1   %t61 
 		 %t63  = load  %t62 
 		 %t64  =   sub  %t63   1 
 		 %t65  = load  %t59 
 		 %t66  =   mul  %t65   %t64 
 		 store  %t56   %t66 
 		 jump %if_end4
 
 %if_end4:
 preds:  %if_elseBB1  
 doms:  %ifTrue1  %if_end2  %forbodyBB2  %forcondBB1  %if_end4  %if_end1  %forbodyBB1  %if_elseBB1  %afterWhileBB1  %if_end3  %main.entryBB1  %whileCondBB1  
 		 jump %forupdateBB2
 
 %if_thenBB4:
 preds:  %if_end3  
 doms:  %ifTrue1  %if_end2  %forbodyBB2  %forcondBB1  %if_end1  %forbodyBB1  %if_thenBB4  %afterWhileBB1  %if_end3  %main.entryBB1  %whileCondBB1  
 		 %t67  =   mul  %tmp1   4 
 		 %t68  =   add  %t67   4 
 		 %t69  =   add  %phi1   %t68 
 		 %t70  =   mul  %k1   4 
 		 %t71  =   add  %t70   4 
 		 %t72  =   add  %phi1   %t71 
 		 %t73  =   mul  %i2   4 
 		 %t74  =   add  %t73   4 
 		 %t75  =   add  %P1   %t74 
 		 %t76  = load  %t72 
 		 %t77  = load  %t75 
 		 %t78  =   mul  %t76   %t77 
 		 store  %t69   %t78 
 		 jump %afterForBB1
 
 %afterForBB1:
 preds:  %ifTrue1  %forcondBB1  %if_thenBB4  
 doms:  %if_end2  %forcondBB1  %afterForBB1  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %t79  =   mul  %k1   4 
 		 %t80  =   add  %t79   4 
 		 %t81  =   add  %phi1   %t80 
 		 %t82  = load  %t81 
 		 %t83  =  call toString  %t82   
 		 %t84  =  call println  %t83   
 		 jump %forupdateBB1
 
 %forupdateBB1:
 preds:  %afterForBB1  
 doms:  %if_end2  %forupdateBB1  %forcondBB1  %afterForBB1  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 %i1  =   add  %i1   1 
 		 jump %forbodyBB1
 
 %if_thenBB3:
 preds:  %forbodyBB2  
 doms:  %ifTrue1  %if_end2  %forbodyBB2  %forcondBB1  %if_thenBB3  %if_end1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 jump %forupdateBB2
 
 %forupdateBB2:
 preds:  %if_thenBB3  %if_end4  
 doms:  %ifTrue1  %if_end2  %forbodyBB2  %forcondBB1  %if_end1  %forbodyBB1  %afterWhileBB1  %forupdateBB2  %main.entryBB1  %whileCondBB1  
 		 %i2  =   add  %i2   1 
 		 jump %forcondBB1
 
 %if_thenBB1:
 preds:  %forbodyBB1  
 doms:  %if_thenBB1  %forbodyBB1  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 jump %afterForBB2
 
 %afterForBB2:
 preds:  %if_thenBB1  
 doms:  %if_thenBB1  %forbodyBB1  %afterForBB2  %afterWhileBB1  %main.entryBB1  %whileCondBB1  
 		 ret  0 
 
 %whileBodyBB1:
 preds:  %whileCondBB1  
 doms:  %whileBodyBB1  %main.entryBB1  %whileCondBB1  
 		 %i1  =   add  %i1   1 
 		 %t85  =   mul  %i1   4 
 		 %t86  =   add  %t85   4 
 		 %t87  =   add  @check   %t86 
 		 store  %t87   1 
 		 jump %whileCondBB1
 
 }
 define void @__init   {
 %__init.entryBB1:
 preds:  
 doms:  %__init.entryBB1  
 		 @M  = move  0 
 		 %t1  =  call main  
 		 ret  
 
 }
